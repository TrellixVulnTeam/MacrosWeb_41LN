{"version":3,"sources":["./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.module.ts","./src/app/pages/login/login-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAEf;AAEjB;;;;;;;;;;ICiBJ,4EAAyD;IAAA,iGAAsC;IAAA,4DAAY;;;IAK3G,4EAA6D;IAAA,+FAA+B;IAAA,4DAAY;;ADfjI,MAAM,cAAc;IAKzB,YACU,oBAAyC,EACzC,WAAwB,EACxB,OAAe;QAFf,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAQ;IACrB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAChC;YACE,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CACF,CAAC;IACJ,CAAC;IAED,KAAK;QACH,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QAChD,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QAEpD,kEAAY,CAAC,cAAc,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC;aAChD,SAAS,CACR,CAAC,QAAa,EAAE,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAClC,IAAI,QAAQ,CAAC,IAAI,IAAI,GAAG,EAAE;gBACxB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7C,IAAI,OAAO,GAAQ,0DAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7C,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC3C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACvC;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,0BAA0B,CAAC;aAC7C;YACD,kEAAY,CAAC,cAAc,GAAG,KAAK,CAAC;QACtC,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,0BAA0B,CAAC;YAC5C,kEAAY,CAAC,cAAc,GAAG,KAAK,CAAC;QACtC,CAAC,CACF;IACL,CAAC;;4EA5CU,cAAc;8FAAd,cAAc;QCZ3B,6EAAgC;QAC5B,yEAAuB;QACnB,sEAAiC;QACjC,yEAAmB;QACf,yEAAmB;QACf,oEAAyC;QAK7C,4DAAM;QACV,4DAAM;QACN,yEAAmB;QACf,yEAA0B;QACtB,yEAAwB;QACpB,yEAAmB;QAAA,0EAAc;QAAA,4DAAM;QACvC,4EAA8C;QAArB,2IAAY,WAAO,IAAC;QACzC,2EAAyB;QACrB,4EAAwB;QAAA,wDAAa;QAAA,4DAAO;QAC5C,sFAAqD;QACjD,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAC9B,wEAAkF;QAClF,yHAA2G;QAC/G,4DAAiB;QACjB,sFAAqD;QACjD,6EAAW;QAAA,2EAAU;QAAA,4DAAY;QACjC,wEAA6F;QAC7F,yHAAwG;QAC5G,4DAAiB;QACjB,2EAA8B;QAC1B,8EAAiE;QAAA,kEAAM;QAAA,4DAAS;QACpF,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAU;;QAtBgB,2DAAkB;QAAlB,+EAAkB;QAEQ,0DAAa;QAAb,8EAAa;QAIrB,0DAA2C;QAA3C,2GAA2C;QAK3C,0DAA+C;QAA/C,+GAA+C;QAGnB,0DAAwB;QAAxB,qFAAwB;;;;;;;;;;;;;;AC7BhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACa;AACT;AACS;AACM;AACA;AACT;AACE;AACiB;AACpB;;AAsBjD,MAAM,WAAW;;sEAAX,WAAW;2FAAX,WAAW;gGAJZ;QACR,yFAAmB;KACpB,YAbQ;YACP,4DAAY;YACZ,wEAAkB;YAClB,yEAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,+EAAkB;YAClB,sEAAc;YACd,wEAAe;YACf,qEAAgB;SACjB;oIAKU,WAAW,mBAjBpB,+DAAc,aAGd,4DAAY;QACZ,wEAAkB;QAClB,yEAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,+EAAkB;QAClB,sEAAc;QACd,wEAAe;QACf,qEAAgB;;;;;;;;;;;;;ACzBpB;AAAA;AAAA;AAAA;AAAA;AAAuD;AACJ;;;AAGnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY","file":"pages-login-login-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { LegalizacionService } from 'src/app/services/legalizacion.service';\nimport jwt_decode from \"jwt-decode\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  errorText: any;\n\n  constructor(\n    private _legalizacionService: LegalizacionService,\n    private formBuilder: FormBuilder,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group(\n      {\n        user: ['', Validators.required],\n        password: ['', Validators.required],\n      }\n    );\n  }\n\n  login() {\n    let userName = this.form.controls['user'].value;\n    let password = this.form.controls['password'].value;\n\n    AppComponent.displayLoading = true;\n    this._legalizacionService.login(userName, password)\n      .subscribe(\n        (responde: any) => {\n          console.log('responde', responde);\n          if (responde.code == '0') {\n            localStorage.setItem('token', responde.data);\n            var decoded: any = jwt_decode(responde.data);\n            localStorage.setItem('role', decoded.role);\n            this._router.navigate(['/dashboard']);\n          } else {\n            this.errorText = \"Credenciales incorrectas\";\n          }\n          AppComponent.displayLoading = false;\n        }, error => {\n          console.log('error', error);\n          this.errorText = \"Credenciales incorrectas\";\n          AppComponent.displayLoading = false;\n        }\n      )\n  }\n\n}\n","<section class=\"main-container\">\n    <div class=\"container\">\n        <input type=\"checkbox\" id=\"flip\">\n        <div class=\"cover\">\n            <div class=\"front\">\n                <img src=\"./assets/img/login.png\" alt=\"\">\n                <!-- <div class=\"text\">\n                    <span class=\"text-1\">Every new friend is a <br> new adventure</span>\n                    <span class=\"text-2\">Let's get connected</span>\n                </div> -->\n            </div>\n        </div>\n        <div class=\"forms\">\n            <div class=\"form-content\">\n                <div class=\"login-form\">\n                    <div class=\"title\">Iniciar Sesion</div>\n                    <form [formGroup]=\"form\" (ngSubmit)=\"login()\">\n                        <div class=\"input-boxes\">\n                            <span class=\"errorText\">{{errorText}}</span>\n                            <mat-form-field appearance=\"fill\" class=\"loginInput\">\n                                <mat-label>Usuario</mat-label>\n                                <input matInput type=\"text\" placeholder=\"Usuario\" formControlName=\"user\" required>\n                                <mat-error *ngIf=\"form.get('user').hasError('required')\">Por favor ingrese un nombre de usuario</mat-error>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\" class=\"loginInput\">\n                                <mat-label>Contraseña</mat-label>\n                                <input matInput type=\"password\" placeholder=\"Contraseña\" formControlName=\"password\" required>\n                                <mat-error *ngIf=\"form.get('password').hasError('required')\">Por favor ingrese su contraseña</mat-error>\n                            </mat-form-field>\n                            <div class=\"button input-box\">\n                                <button type=\"submit\" mat-raised-button [disabled]=\"!form.valid\">Entrar</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LoginComponent } from './login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LegalizacionService } from 'src/app/services/legalizacion.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule\n  ],\n  providers:[\n    LegalizacionService\n  ]\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule { }\n"],"sourceRoot":"webpack:///"}