{"version":3,"sources":["./src/app/pages/user-roles/user-roles-routing.module.ts","./src/app/pages/user-roles/user-roles.module.ts","./src/app/pages/user-roles/user-roles.component.ts","./src/app/pages/user-roles/user-roles.component.html"],"names":[],"mappings":"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","file":"pages-user-roles-user-roles-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserRolesComponent } from './user-roles.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserRolesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRolesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserRolesComponent } from './user-roles.component';\nimport { UserRolesRoutingModule } from './user-roles-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ConfirmationService } from 'primeng/api';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LegalizacionService } from 'src/app/services/legalizacion.service';\n\n@NgModule({\n  declarations: [\n    UserRolesComponent\n  ],\n  imports: [\n    CommonModule,\n    UserRolesRoutingModule,\n    SharedModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    ConfirmDialogModule,\n    HttpClientModule\n  ],providers:[\n    ConfirmationService,\n    LegalizacionService\n  ]\n})\nexport class UserRolesModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmationService } from 'primeng/api';\nimport { AppComponent } from 'src/app/app.component';\nimport { LegalizacionService } from 'src/app/services/legalizacion.service';\n\n@Component({\n  selector: 'app-user-roles',\n  templateUrl: './user-roles.component.html',\n  styleUrls: ['./user-roles.component.scss']\n})\nexport class UserRolesComponent implements OnInit {\n\n  usersList: any = [];\n  total: number = 0;\n\n  rolesList = [];\n\n  displayedColumns: string[] = ['usuario', 'rol'];\n  dataSource: MatTableDataSource<any> = new MatTableDataSource();;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private _legalizacionService: LegalizacionService,\n    private _confirmationService: ConfirmationService\n  ) { }\n\n  ngOnInit(): void {\n    this.getUsers();\n    this.getRoles();\n  }\n\n  getUsers() {\n    AppComponent.displayLoading = true;\n\n    this._legalizacionService.getUsers()\n      .subscribe(\n        (response: any) => {\n          this.usersList = response.data;\n          this.total = this.usersList.length;\n\n          this.dataSource = new MatTableDataSource(this.usersList);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          AppComponent.displayLoading = false;\n        }, err => {\n          console.log(err);\n          AppComponent.displayLoading = false;\n        }\n      )\n  }\n\n\n  getRoles() {\n    AppComponent.displayLoading = true;\n\n    this._legalizacionService.getRoles()\n      .subscribe(\n        (response: any) => {\n          this.rolesList = response.data;\n          AppComponent.displayLoading = false;\n        }, err => {\n          console.log(err);\n          AppComponent.displayLoading = false;\n        }\n      )\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  changeRole(evt, userId) {\n    let role = this.getRoleByName(evt.value);\n\n    if (role != null && role != undefined) {\n\n\n      this._confirmationService.confirm({\n        message: 'Estas seguro que deseas actualizar este campo?',\n        accept: () => {\n          AppComponent.displayLoading = true;\n\n          this._legalizacionService.addOrUpdateRole(userId, role.Id, 2)\n            .subscribe(\n              (response: any) => {\n                AppComponent.displayLoading = false;\n              }, err => {\n                console.log(err);\n                AppComponent.displayLoading = false;\n              }\n            )\n        },\n        reject: () => {\n          this._confirmationService.close();\n        }\n      });\n\n    }\n\n  }\n\n  getRoleByName(name) {\n    for (let index = 0; index < this.rolesList.length; index++) {\n      const element = this.rolesList[index];\n      if(element.Name == name){\n        return element;\n      }\n    }\n    return null;\n  }\n\n}\n","<app-layout>\n    <section class=\"content-panel\">\n        <mat-card>\n            <h1>Usuarios</h1>\n            <h5>Total: {{total}}</h5>\n            <div>\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Filtro</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Escribe una palabra\" #input>\n                </mat-form-field>\n\n                <div class=\"mat-elevation-z8\">\n                    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                        <!-- ID Column -->\n                        <ng-container matColumnDef=\"usuario\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Usuario </th>\n                            <td mat-cell *matCellDef=\"let row\"> {{row.UserName}} </td>\n                        </ng-container>\n\n                        <!-- Progress Column -->\n                        <ng-container matColumnDef=\"rol\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Rol </th>\n                            <td mat-cell *matCellDef=\"let row\">\n                                <mat-form-field appearance=\"fill\">\n                                    <mat-label>Selecciona una opcion</mat-label>\n                                    <mat-select name=\"rol\" [(ngModel)]=\"row.Role\"\n                                        (selectionChange)=\"changeRole($event, row.Id)\">\n                                        <mat-option [value]=\"rol.Name\" *ngFor=\"let rol of rolesList\">{{rol.Name}}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                    </table>\n\n                    <mat-paginator [pageSizeOptions]=\"[10,25, 100]\" aria-label=\"Select page of users\">\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card>\n        <!-- <div class=\"save-content\">\n            <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n                <mat-icon>save</mat-icon>\n            </button>\n        </div> -->\n        <p-confirmDialog header=\"Confirmacion\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n\n    </section>\n\n</app-layout>"],"sourceRoot":"webpack:///"}