{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{\"+0xr\":function(t,e,i){\"use strict\";i.d(e,\"a\",function(){return gt}),i.d(e,\"b\",function(){return lt}),i.d(e,\"c\",function(){return ft}),i.d(e,\"d\",function(){return mt}),i.d(e,\"e\",function(){return ht}),i.d(e,\"f\",function(){return vt}),i.d(e,\"g\",function(){return wt}),i.d(e,\"h\",function(){return Rt}),i.d(e,\"i\",function(){return St}),i.d(e,\"j\",function(){return rt}),i.d(e,\"k\",function(){return Pt}),i.d(e,\"l\",function(){return Ot});var s=i(\"8LU1\"),o=i(\"0EQZ\"),a=i(\"fXoL\"),n=i(\"cH1L\"),r=i(\"nLfN\"),c=i(\"vxfF\"),l=i(\"ofXK\"),d=i(\"XNiG\"),h=i(\"Cfvw\"),u=i(\"2Vo4\"),f=i(\"7+OI\"),p=i(\"LRne\"),m=i(\"1G5W\"),b=i(\"IzEk\");const g=[[[\"caption\"]],[[\"colgroup\"],[\"col\"]]],_=[\"caption\",\"colgroup, col\"];function w(t){return class extends t{constructor(...t){super(...t),this._sticky=!1,this._hasStickyChanged=!1}get sticky(){return this._sticky}set sticky(t){const e=this._sticky;this._sticky=Object(s.c)(t),this._hasStickyChanged=e!==this._sticky}hasStickyChanged(){const t=this._hasStickyChanged;return this._hasStickyChanged=!1,t}resetStickyChanged(){this._hasStickyChanged=!1}}}const y=new a.s(\"CDK_TABLE\");let S=(()=>{class t{constructor(t){this.template=t}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.N))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"cdkCellDef\",\"\"]]}),t})(),C=(()=>{class t{constructor(t){this.template=t}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.N))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"cdkHeaderCellDef\",\"\"]]}),t})(),v=(()=>{class t{constructor(t){this.template=t}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.N))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"cdkFooterCellDef\",\"\"]]}),t})();class D{}const R=w(D);let k=(()=>{class t extends R{constructor(t){super(),this._table=t,this._stickyEnd=!1}get name(){return this._name}set name(t){this._setNameInput(t)}get stickyEnd(){return this._stickyEnd}set stickyEnd(t){const e=this._stickyEnd;this._stickyEnd=Object(s.c)(t),this._hasStickyChanged=e!==this._stickyEnd}_updateColumnCssClassName(){this._columnCssClassName=[`cdk-column-${this.cssClassFriendlyName}`]}_setNameInput(t){t&&(this._name=t,this.cssClassFriendlyName=t.replace(/[^a-z0-9_-]/gi,\"-\"),this._updateColumnCssClassName())}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(y,8))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"cdkColumnDef\",\"\"]],contentQueries:function(t,e,i){if(1&t&&(a.Ib(i,S,1),a.Ib(i,C,1),a.Ib(i,v,1)),2&t){let t;a.vc(t=a.dc())&&(e.cell=t.first),a.vc(t=a.dc())&&(e.headerCell=t.first),a.vc(t=a.dc())&&(e.footerCell=t.first)}},inputs:{sticky:\"sticky\",name:[\"cdkColumnDef\",\"name\"],stickyEnd:\"stickyEnd\"},features:[a.Cb([{provide:\"MAT_SORT_HEADER_COLUMN_DEF\",useExisting:t}]),a.Ab]}),t})();class O{constructor(t,e){const i=e.nativeElement.classList;for(const s of t._columnCssClassName)i.add(s)}}let x=(()=>{class t extends O{constructor(t,e){super(t,e)}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(k),a.Pb(a.l))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"cdk-header-cell\"],[\"th\",\"cdk-header-cell\",\"\"]],hostAttrs:[\"role\",\"columnheader\",1,\"cdk-header-cell\"],features:[a.Ab]}),t})(),P=(()=>{class t extends O{constructor(t,e){super(t,e)}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(k),a.Pb(a.l))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"cdk-cell\"],[\"td\",\"cdk-cell\",\"\"]],hostAttrs:[\"role\",\"gridcell\",1,\"cdk-cell\"],features:[a.Ab]}),t})();class A{constructor(){this.tasks=[],this.endTasks=[]}}const I=new a.s(\"_COALESCED_STYLE_SCHEDULER\");let j=(()=>{class t{constructor(t){this._ngZone=t,this._currentSchedule=null,this._destroyed=new d.a}schedule(t){this._createScheduleIfNeeded(),this._currentSchedule.tasks.push(t)}scheduleEnd(t){this._createScheduleIfNeeded(),this._currentSchedule.endTasks.push(t)}ngOnDestroy(){this._destroyed.next(),this._destroyed.complete()}_createScheduleIfNeeded(){this._currentSchedule||(this._currentSchedule=new A,this._getScheduleObservable().pipe(Object(m.a)(this._destroyed)).subscribe(()=>{for(;this._currentSchedule.tasks.length||this._currentSchedule.endTasks.length;){const t=this._currentSchedule;this._currentSchedule=new A;for(const e of t.tasks)e();for(const e of t.endTasks)e()}this._currentSchedule=null}))}_getScheduleObservable(){return this._ngZone.isStable?Object(h.a)(Promise.resolve(void 0)):this._ngZone.onStable.pipe(Object(b.a)(1))}}return t.\\u0275fac=function(e){return new(e||t)(a.Zb(a.B))},t.\\u0275prov=a.Lb({token:t,factory:t.\\u0275fac}),t})(),L=(()=>{class t{constructor(t,e){this.template=t,this._differs=e}ngOnChanges(t){if(!this._columnsDiffer){const e=t.columns&&t.columns.currentValue||[];this._columnsDiffer=this._differs.find(e).create(),this._columnsDiffer.diff(e)}}getColumnsDiff(){return this._columnsDiffer.diff(this.columns)}extractCellTemplate(t){return this instanceof N?t.headerCell.template:this instanceof V?t.footerCell.template:t.cell.template}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.N),a.Pb(a.u))},t.\\u0275dir=a.Kb({type:t,features:[a.Bb]}),t})();class z extends L{}const E=w(z);let N=(()=>{class t extends E{constructor(t,e,i){super(t,e),this._table=i}ngOnChanges(t){super.ngOnChanges(t)}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.N),a.Pb(a.u),a.Pb(y,8))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"cdkHeaderRowDef\",\"\"]],inputs:{columns:[\"cdkHeaderRowDef\",\"columns\"],sticky:[\"cdkHeaderRowDefSticky\",\"sticky\"]},features:[a.Ab,a.Bb]}),t})();class T extends L{}const F=w(T);let V=(()=>{class t extends F{constructor(t,e,i){super(t,e),this._table=i}ngOnChanges(t){super.ngOnChanges(t)}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.N),a.Pb(a.u),a.Pb(y,8))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"cdkFooterRowDef\",\"\"]],inputs:{columns:[\"cdkFooterRowDef\",\"columns\"],sticky:[\"cdkFooterRowDefSticky\",\"sticky\"]},features:[a.Ab,a.Bb]}),t})(),M=(()=>{class t extends L{constructor(t,e,i){super(t,e),this._table=i}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.N),a.Pb(a.u),a.Pb(y,8))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"cdkRowDef\",\"\"]],inputs:{columns:[\"cdkRowDefColumns\",\"columns\"],when:[\"cdkRowDefWhen\",\"when\"]},features:[a.Ab]}),t})(),H=(()=>{class t{constructor(e){this._viewContainer=e,t.mostRecentCellOutlet=this}ngOnDestroy(){t.mostRecentCellOutlet===this&&(t.mostRecentCellOutlet=null)}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.R))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"cdkCellOutlet\",\"\"]]}),t.mostRecentCellOutlet=null,t})(),B=(()=>{class t{}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275cmp=a.Jb({type:t,selectors:[[\"cdk-header-row\"],[\"tr\",\"cdk-header-row\",\"\"]],hostAttrs:[\"role\",\"row\",1,\"cdk-header-row\"],decls:1,vars:0,consts:[[\"cdkCellOutlet\",\"\"]],template:function(t,e){1&t&&a.Rb(0,0)},directives:[H],encapsulation:2}),t})(),U=(()=>{class t{}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275cmp=a.Jb({type:t,selectors:[[\"cdk-row\"],[\"tr\",\"cdk-row\",\"\"]],hostAttrs:[\"role\",\"row\",1,\"cdk-row\"],decls:1,vars:0,consts:[[\"cdkCellOutlet\",\"\"]],template:function(t,e){1&t&&a.Rb(0,0)},directives:[H],encapsulation:2}),t})(),K=(()=>{class t{constructor(t){this.templateRef=t}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.N))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"ng-template\",\"cdkNoDataRow\",\"\"]]}),t})();const Q=[\"top\",\"bottom\",\"left\",\"right\"];class X{constructor(t,e,i,s,o=!0,a=!0,n){this._isNativeHtmlTable=t,this._stickCellCss=e,this.direction=i,this._coalescedStyleScheduler=s,this._isBrowser=o,this._needsPositionStickyOnElement=a,this._positionListener=n,this._cachedCellWidths=[],this._borderCellCss={top:`${e}-border-elem-top`,bottom:`${e}-border-elem-bottom`,left:`${e}-border-elem-left`,right:`${e}-border-elem-right`}}clearStickyPositioning(t,e){const i=[];for(const s of t)if(s.nodeType===s.ELEMENT_NODE){i.push(s);for(let t=0;t<s.children.length;t++)i.push(s.children[t])}this._scheduleStyleChanges(()=>{for(const t of i)this._removeStickyStyle(t,e)})}updateStickyColumns(t,e,i,s=!0){if(!t.length||!this._isBrowser||!e.some(t=>t)&&!i.some(t=>t))return void(this._positionListener&&(this._positionListener.stickyColumnsUpdated({sizes:[]}),this._positionListener.stickyEndColumnsUpdated({sizes:[]})));const o=t[0],a=o.children.length,n=this._getCellWidths(o,s),r=this._getStickyStartColumnPositions(n,e),c=this._getStickyEndColumnPositions(n,i),l=e.lastIndexOf(!0),d=i.indexOf(!0);this._scheduleStyleChanges(()=>{const s=\"rtl\"===this.direction,o=s?\"right\":\"left\",h=s?\"left\":\"right\";for(const n of t)for(let t=0;t<a;t++){const s=n.children[t];e[t]&&this._addStickyStyle(s,o,r[t],t===l),i[t]&&this._addStickyStyle(s,h,c[t],t===d)}this._positionListener&&(this._positionListener.stickyColumnsUpdated({sizes:-1===l?[]:n.slice(0,l+1).map((t,i)=>e[i]?t:null)}),this._positionListener.stickyEndColumnsUpdated({sizes:-1===d?[]:n.slice(d).map((t,e)=>i[e+d]?t:null).reverse()}))})}stickRows(t,e,i){if(!this._isBrowser)return;const s=\"bottom\"===i?t.slice().reverse():t,o=\"bottom\"===i?e.slice().reverse():e,a=[],n=[],r=[];for(let l=0,d=0;l<s.length;l++){if(a[l]=d,!o[l])continue;const t=s[l];r[l]=this._isNativeHtmlTable?Array.from(t.children):[t];const e=t.getBoundingClientRect().height;d+=e,n[l]=e}const c=o.lastIndexOf(!0);this._scheduleStyleChanges(()=>{var t,e;for(let n=0;n<s.length;n++){if(!o[n])continue;const t=a[n],e=n===c;for(const s of r[n])this._addStickyStyle(s,i,t,e)}\"top\"===i?null===(t=this._positionListener)||void 0===t||t.stickyHeaderRowsUpdated({sizes:n,elements:r}):null===(e=this._positionListener)||void 0===e||e.stickyFooterRowsUpdated({sizes:n,elements:r})})}updateStickyFooterContainer(t,e){if(!this._isNativeHtmlTable)return;const i=t.querySelector(\"tfoot\");this._scheduleStyleChanges(()=>{e.some(t=>!t)?this._removeStickyStyle(i,[\"bottom\"]):this._addStickyStyle(i,\"bottom\",0,!1)})}_removeStickyStyle(t,e){for(const i of e)t.style[i]=\"\",t.classList.remove(this._borderCellCss[i]);Q.some(i=>-1===e.indexOf(i)&&t.style[i])?t.style.zIndex=this._getCalculatedZIndex(t):(t.style.zIndex=\"\",this._needsPositionStickyOnElement&&(t.style.position=\"\"),t.classList.remove(this._stickCellCss))}_addStickyStyle(t,e,i,s){t.classList.add(this._stickCellCss),s&&t.classList.add(this._borderCellCss[e]),t.style[e]=`${i}px`,t.style.zIndex=this._getCalculatedZIndex(t),this._needsPositionStickyOnElement&&(t.style.cssText+=\"position: -webkit-sticky; position: sticky; \")}_getCalculatedZIndex(t){const e={top:100,bottom:10,left:1,right:1};let i=0;for(const s of Q)t.style[s]&&(i+=e[s]);return i?`${i}`:\"\"}_getCellWidths(t,e=!0){if(!e&&this._cachedCellWidths.length)return this._cachedCellWidths;const i=[],s=t.children;for(let o=0;o<s.length;o++)i.push(s[o].getBoundingClientRect().width);return this._cachedCellWidths=i,i}_getStickyStartColumnPositions(t,e){const i=[];let s=0;for(let o=0;o<t.length;o++)e[o]&&(i[o]=s,s+=t[o]);return i}_getStickyEndColumnPositions(t,e){const i=[];let s=0;for(let o=t.length;o>0;o--)e[o]&&(i[o]=s,s+=t[o]);return i}_scheduleStyleChanges(t){this._coalescedStyleScheduler?this._coalescedStyleScheduler.schedule(t):t()}}const J=new a.s(\"CDK_SPL\");let W=(()=>{class t{constructor(t,e){this.viewContainer=t,this.elementRef=e}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.R),a.Pb(a.l))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"rowOutlet\",\"\"]]}),t})(),$=(()=>{class t{constructor(t,e){this.viewContainer=t,this.elementRef=e}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.R),a.Pb(a.l))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"headerRowOutlet\",\"\"]]}),t})(),Y=(()=>{class t{constructor(t,e){this.viewContainer=t,this.elementRef=e}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.R),a.Pb(a.l))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"footerRowOutlet\",\"\"]]}),t})(),G=(()=>{class t{constructor(t,e){this.viewContainer=t,this.elementRef=e}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.R),a.Pb(a.l))},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"noDataRowOutlet\",\"\"]]}),t})(),Z=(()=>{class t{constructor(t,e,i,s,o,a,n,r,c,l,h){this._differs=t,this._changeDetectorRef=e,this._elementRef=i,this._dir=o,this._platform=n,this._viewRepeater=r,this._coalescedStyleScheduler=c,this._stickyPositioningListener=l,this._viewportRuler=h,this._onDestroy=new d.a,this._columnDefsByName=new Map,this._customColumnDefs=new Set,this._customRowDefs=new Set,this._customHeaderRowDefs=new Set,this._customFooterRowDefs=new Set,this._headerRowDefChanged=!0,this._footerRowDefChanged=!0,this._stickyColumnStylesNeedReset=!0,this._forceRecalculateCellWidths=!0,this._cachedRenderRowsMap=new Map,this.stickyCssClass=\"cdk-table-sticky\",this.needsPositionStickyOnElement=!0,this._isShowingNoDataRow=!1,this._multiTemplateDataRows=!1,this._fixedLayout=!1,this.viewChange=new u.a({start:0,end:Number.MAX_VALUE}),s||this._elementRef.nativeElement.setAttribute(\"role\",\"grid\"),this._document=a,this._isNativeHtmlTable=\"TABLE\"===this._elementRef.nativeElement.nodeName}get trackBy(){return this._trackByFn}set trackBy(t){this._trackByFn=t}get dataSource(){return this._dataSource}set dataSource(t){this._dataSource!==t&&this._switchDataSource(t)}get multiTemplateDataRows(){return this._multiTemplateDataRows}set multiTemplateDataRows(t){this._multiTemplateDataRows=Object(s.c)(t),this._rowOutlet&&this._rowOutlet.viewContainer.length&&(this._forceRenderDataRows(),this.updateStickyColumnStyles())}get fixedLayout(){return this._fixedLayout}set fixedLayout(t){this._fixedLayout=Object(s.c)(t),this._forceRecalculateCellWidths=!0,this._stickyColumnStylesNeedReset=!0}ngOnInit(){this._setupStickyStyler(),this._isNativeHtmlTable&&this._applyNativeTableSections(),this._dataDiffer=this._differs.find([]).create((t,e)=>this.trackBy?this.trackBy(e.dataIndex,e.data):e),this._viewportRuler&&this._viewportRuler.change().pipe(Object(m.a)(this._onDestroy)).subscribe(()=>{this._forceRecalculateCellWidths=!0})}ngAfterContentChecked(){this._cacheRowDefs(),this._cacheColumnDefs();const t=this._renderUpdatedColumns()||this._headerRowDefChanged||this._footerRowDefChanged;this._stickyColumnStylesNeedReset=this._stickyColumnStylesNeedReset||t,this._forceRecalculateCellWidths=t,this._headerRowDefChanged&&(this._forceRenderHeaderRows(),this._headerRowDefChanged=!1),this._footerRowDefChanged&&(this._forceRenderFooterRows(),this._footerRowDefChanged=!1),this.dataSource&&this._rowDefs.length>0&&!this._renderChangeSubscription?this._observeRenderChanges():this._stickyColumnStylesNeedReset&&this.updateStickyColumnStyles(),this._checkStickyStates()}ngOnDestroy(){this._rowOutlet.viewContainer.clear(),this._noDataRowOutlet.viewContainer.clear(),this._headerRowOutlet.viewContainer.clear(),this._footerRowOutlet.viewContainer.clear(),this._cachedRenderRowsMap.clear(),this._onDestroy.next(),this._onDestroy.complete(),Object(o.g)(this.dataSource)&&this.dataSource.disconnect(this)}renderRows(){this._renderRows=this._getAllRenderRows();const t=this._dataDiffer.diff(this._renderRows);if(!t)return void this._updateNoDataRow();const e=this._rowOutlet.viewContainer;this._viewRepeater?this._viewRepeater.applyChanges(t,e,(t,e,i)=>this._getEmbeddedViewArgs(t.item,i),t=>t.item.data,t=>{1===t.operation&&t.context&&this._renderCellTemplateForItem(t.record.item.rowDef,t.context)}):t.forEachOperation((t,i,s)=>{if(null==t.previousIndex){const e=t.item;this._renderRow(this._rowOutlet,e.rowDef,s,{$implicit:e.data})}else if(null==s)e.remove(i);else{const t=e.get(i);e.move(t,s)}}),this._updateRowIndexContext(),t.forEachIdentityChange(t=>{e.get(t.currentIndex).context.$implicit=t.item.data}),this._updateNoDataRow(),this.updateStickyColumnStyles()}addColumnDef(t){this._customColumnDefs.add(t)}removeColumnDef(t){this._customColumnDefs.delete(t)}addRowDef(t){this._customRowDefs.add(t)}removeRowDef(t){this._customRowDefs.delete(t)}addHeaderRowDef(t){this._customHeaderRowDefs.add(t),this._headerRowDefChanged=!0}removeHeaderRowDef(t){this._customHeaderRowDefs.delete(t),this._headerRowDefChanged=!0}addFooterRowDef(t){this._customFooterRowDefs.add(t),this._footerRowDefChanged=!0}removeFooterRowDef(t){this._customFooterRowDefs.delete(t),this._footerRowDefChanged=!0}setNoDataRow(t){this._customNoDataRow=t}updateStickyHeaderRowStyles(){const t=this._getRenderedRows(this._headerRowOutlet),e=this._elementRef.nativeElement.querySelector(\"thead\");e&&(e.style.display=t.length?\"\":\"none\");const i=this._headerRowDefs.map(t=>t.sticky);this._stickyStyler.clearStickyPositioning(t,[\"top\"]),this._stickyStyler.stickRows(t,i,\"top\"),this._headerRowDefs.forEach(t=>t.resetStickyChanged())}updateStickyFooterRowStyles(){const t=this._getRenderedRows(this._footerRowOutlet),e=this._elementRef.nativeElement.querySelector(\"tfoot\");e&&(e.style.display=t.length?\"\":\"none\");const i=this._footerRowDefs.map(t=>t.sticky);this._stickyStyler.clearStickyPositioning(t,[\"bottom\"]),this._stickyStyler.stickRows(t,i,\"bottom\"),this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement,i),this._footerRowDefs.forEach(t=>t.resetStickyChanged())}updateStickyColumnStyles(){const t=this._getRenderedRows(this._headerRowOutlet),e=this._getRenderedRows(this._rowOutlet),i=this._getRenderedRows(this._footerRowOutlet);(this._isNativeHtmlTable&&!this._fixedLayout||this._stickyColumnStylesNeedReset)&&(this._stickyStyler.clearStickyPositioning([...t,...e,...i],[\"left\",\"right\"]),this._stickyColumnStylesNeedReset=!1),t.forEach((t,e)=>{this._addStickyColumnStyles([t],this._headerRowDefs[e])}),this._rowDefs.forEach(t=>{const i=[];for(let s=0;s<e.length;s++)this._renderRows[s].rowDef===t&&i.push(e[s]);this._addStickyColumnStyles(i,t)}),i.forEach((t,e)=>{this._addStickyColumnStyles([t],this._footerRowDefs[e])}),Array.from(this._columnDefsByName.values()).forEach(t=>t.resetStickyChanged())}_getAllRenderRows(){const t=[],e=this._cachedRenderRowsMap;this._cachedRenderRowsMap=new Map;for(let i=0;i<this._data.length;i++){let s=this._data[i];const o=this._getRenderRowsForData(s,i,e.get(s));this._cachedRenderRowsMap.has(s)||this._cachedRenderRowsMap.set(s,new WeakMap);for(let e=0;e<o.length;e++){let i=o[e];const s=this._cachedRenderRowsMap.get(i.data);s.has(i.rowDef)?s.get(i.rowDef).push(i):s.set(i.rowDef,[i]),t.push(i)}}return t}_getRenderRowsForData(t,e,i){return this._getRowDefs(t,e).map(s=>{const o=i&&i.has(s)?i.get(s):[];if(o.length){const t=o.shift();return t.dataIndex=e,t}return{data:t,rowDef:s,dataIndex:e}})}_cacheColumnDefs(){this._columnDefsByName.clear(),q(this._getOwnDefs(this._contentColumnDefs),this._customColumnDefs).forEach(t=>{this._columnDefsByName.has(t.name),this._columnDefsByName.set(t.name,t)})}_cacheRowDefs(){this._headerRowDefs=q(this._getOwnDefs(this._contentHeaderRowDefs),this._customHeaderRowDefs),this._footerRowDefs=q(this._getOwnDefs(this._contentFooterRowDefs),this._customFooterRowDefs),this._rowDefs=q(this._getOwnDefs(this._contentRowDefs),this._customRowDefs);const t=this._rowDefs.filter(t=>!t.when);this._defaultRowDef=t[0]}_renderUpdatedColumns(){const t=(t,e)=>t||!!e.getColumnsDiff(),e=this._rowDefs.reduce(t,!1);e&&this._forceRenderDataRows();const i=this._headerRowDefs.reduce(t,!1);i&&this._forceRenderHeaderRows();const s=this._footerRowDefs.reduce(t,!1);return s&&this._forceRenderFooterRows(),e||i||s}_switchDataSource(t){this._data=[],Object(o.g)(this.dataSource)&&this.dataSource.disconnect(this),this._renderChangeSubscription&&(this._renderChangeSubscription.unsubscribe(),this._renderChangeSubscription=null),t||(this._dataDiffer&&this._dataDiffer.diff([]),this._rowOutlet.viewContainer.clear()),this._dataSource=t}_observeRenderChanges(){if(!this.dataSource)return;let t;Object(o.g)(this.dataSource)?t=this.dataSource.connect(this):Object(f.a)(this.dataSource)?t=this.dataSource:Array.isArray(this.dataSource)&&(t=Object(p.a)(this.dataSource)),this._renderChangeSubscription=t.pipe(Object(m.a)(this._onDestroy)).subscribe(t=>{this._data=t||[],this.renderRows()})}_forceRenderHeaderRows(){this._headerRowOutlet.viewContainer.length>0&&this._headerRowOutlet.viewContainer.clear(),this._headerRowDefs.forEach((t,e)=>this._renderRow(this._headerRowOutlet,t,e)),this.updateStickyHeaderRowStyles()}_forceRenderFooterRows(){this._footerRowOutlet.viewContainer.length>0&&this._footerRowOutlet.viewContainer.clear(),this._footerRowDefs.forEach((t,e)=>this._renderRow(this._footerRowOutlet,t,e)),this.updateStickyFooterRowStyles()}_addStickyColumnStyles(t,e){const i=Array.from(e.columns||[]).map(t=>this._columnDefsByName.get(t)),s=i.map(t=>t.sticky),o=i.map(t=>t.stickyEnd);this._stickyStyler.updateStickyColumns(t,s,o,!this._fixedLayout||this._forceRecalculateCellWidths)}_getRenderedRows(t){const e=[];for(let i=0;i<t.viewContainer.length;i++){const s=t.viewContainer.get(i);e.push(s.rootNodes[0])}return e}_getRowDefs(t,e){if(1==this._rowDefs.length)return[this._rowDefs[0]];let i=[];if(this.multiTemplateDataRows)i=this._rowDefs.filter(i=>!i.when||i.when(e,t));else{let s=this._rowDefs.find(i=>i.when&&i.when(e,t))||this._defaultRowDef;s&&i.push(s)}return i}_getEmbeddedViewArgs(t,e){return{templateRef:t.rowDef.template,context:{$implicit:t.data},index:e}}_renderRow(t,e,i,s={}){const o=t.viewContainer.createEmbeddedView(e.template,s,i);return this._renderCellTemplateForItem(e,s),o}_renderCellTemplateForItem(t,e){for(let i of this._getCellTemplates(t))H.mostRecentCellOutlet&&H.mostRecentCellOutlet._viewContainer.createEmbeddedView(i,e);this._changeDetectorRef.markForCheck()}_updateRowIndexContext(){const t=this._rowOutlet.viewContainer;for(let e=0,i=t.length;e<i;e++){const s=t.get(e).context;s.count=i,s.first=0===e,s.last=e===i-1,s.even=e%2==0,s.odd=!s.even,this.multiTemplateDataRows?(s.dataIndex=this._renderRows[e].dataIndex,s.renderIndex=e):s.index=this._renderRows[e].dataIndex}}_getCellTemplates(t){return t&&t.columns?Array.from(t.columns,e=>{const i=this._columnDefsByName.get(e);return t.extractCellTemplate(i)}):[]}_applyNativeTableSections(){const t=this._document.createDocumentFragment(),e=[{tag:\"thead\",outlets:[this._headerRowOutlet]},{tag:\"tbody\",outlets:[this._rowOutlet,this._noDataRowOutlet]},{tag:\"tfoot\",outlets:[this._footerRowOutlet]}];for(const i of e){const e=this._document.createElement(i.tag);e.setAttribute(\"role\",\"rowgroup\");for(const t of i.outlets)e.appendChild(t.elementRef.nativeElement);t.appendChild(e)}this._elementRef.nativeElement.appendChild(t)}_forceRenderDataRows(){this._dataDiffer.diff([]),this._rowOutlet.viewContainer.clear(),this.renderRows()}_checkStickyStates(){const t=(t,e)=>t||e.hasStickyChanged();this._headerRowDefs.reduce(t,!1)&&this.updateStickyHeaderRowStyles(),this._footerRowDefs.reduce(t,!1)&&this.updateStickyFooterRowStyles(),Array.from(this._columnDefsByName.values()).reduce(t,!1)&&(this._stickyColumnStylesNeedReset=!0,this.updateStickyColumnStyles())}_setupStickyStyler(){this._stickyStyler=new X(this._isNativeHtmlTable,this.stickyCssClass,this._dir?this._dir.value:\"ltr\",this._coalescedStyleScheduler,this._platform.isBrowser,this.needsPositionStickyOnElement,this._stickyPositioningListener),(this._dir?this._dir.change:Object(p.a)()).pipe(Object(m.a)(this._onDestroy)).subscribe(t=>{this._stickyStyler.direction=t,this.updateStickyColumnStyles()})}_getOwnDefs(t){return t.filter(t=>!t._table||t._table===this)}_updateNoDataRow(){const t=this._customNoDataRow||this._noDataRow;if(t){const e=0===this._rowOutlet.viewContainer.length;if(e!==this._isShowingNoDataRow){const i=this._noDataRowOutlet.viewContainer;e?i.createEmbeddedView(t.templateRef):i.clear(),this._isShowingNoDataRow=e}}}}return t.\\u0275fac=function(e){return new(e||t)(a.Pb(a.u),a.Pb(a.h),a.Pb(a.l),a.ac(\"role\"),a.Pb(n.c,8),a.Pb(l.e),a.Pb(r.a),a.Pb(o.f,8),a.Pb(I,8),a.Pb(J,12),a.Pb(c.e,8))},t.\\u0275cmp=a.Jb({type:t,selectors:[[\"cdk-table\"],[\"table\",\"cdk-table\",\"\"]],contentQueries:function(t,e,i){if(1&t&&(a.Ib(i,K,1),a.Ib(i,k,1),a.Ib(i,M,1),a.Ib(i,N,1),a.Ib(i,V,1)),2&t){let t;a.vc(t=a.dc())&&(e._noDataRow=t.first),a.vc(t=a.dc())&&(e._contentColumnDefs=t),a.vc(t=a.dc())&&(e._contentRowDefs=t),a.vc(t=a.dc())&&(e._contentHeaderRowDefs=t),a.vc(t=a.dc())&&(e._contentFooterRowDefs=t)}},viewQuery:function(t,e){if(1&t&&(a.Oc(W,3),a.Oc($,3),a.Oc(Y,3),a.Oc(G,3)),2&t){let t;a.vc(t=a.dc())&&(e._rowOutlet=t.first),a.vc(t=a.dc())&&(e._headerRowOutlet=t.first),a.vc(t=a.dc())&&(e._footerRowOutlet=t.first),a.vc(t=a.dc())&&(e._noDataRowOutlet=t.first)}},hostAttrs:[1,\"cdk-table\"],hostVars:2,hostBindings:function(t,e){2&t&&a.Hb(\"cdk-table-fixed-layout\",e.fixedLayout)},inputs:{trackBy:\"trackBy\",dataSource:\"dataSource\",multiTemplateDataRows:\"multiTemplateDataRows\",fixedLayout:\"fixedLayout\"},exportAs:[\"cdkTable\"],features:[a.Cb([{provide:y,useExisting:t},{provide:o.f,useClass:o.d},{provide:I,useClass:j},{provide:J,useValue:null}])],ngContentSelectors:_,decls:6,vars:0,consts:[[\"headerRowOutlet\",\"\"],[\"rowOutlet\",\"\"],[\"noDataRowOutlet\",\"\"],[\"footerRowOutlet\",\"\"]],template:function(t,e){1&t&&(a.lc(g),a.kc(0),a.kc(1,1),a.Rb(2,0),a.Rb(3,1),a.Rb(4,2),a.Rb(5,3))},directives:[$,W,G,Y],styles:[\".cdk-table-fixed-layout{table-layout:fixed}\\n\"],encapsulation:2}),t})();function q(t,e){return t.concat(Array.from(e))}let tt=(()=>{class t{}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275mod=a.Nb({type:t}),t.\\u0275inj=a.Mb({imports:[[c.d]]}),t})();var et=i(\"FKr1\"),it=i(\"VRyK\"),st=i(\"itXk\"),ot=i(\"lJxs\");const at=[[[\"caption\"]],[[\"colgroup\"],[\"col\"]]],nt=[\"caption\",\"colgroup, col\"];let rt=(()=>{class t extends Z{constructor(){super(...arguments),this.stickyCssClass=\"mat-table-sticky\",this.needsPositionStickyOnElement=!1}}return t.\\u0275fac=function(e){return ct(e||t)},t.\\u0275cmp=a.Jb({type:t,selectors:[[\"mat-table\"],[\"table\",\"mat-table\",\"\"]],hostAttrs:[1,\"mat-table\"],hostVars:2,hostBindings:function(t,e){2&t&&a.Hb(\"mat-table-fixed-layout\",e.fixedLayout)},exportAs:[\"matTable\"],features:[a.Cb([{provide:o.f,useClass:o.d},{provide:Z,useExisting:t},{provide:y,useExisting:t},{provide:I,useClass:j}]),a.Ab],ngContentSelectors:nt,decls:6,vars:0,consts:[[\"headerRowOutlet\",\"\"],[\"rowOutlet\",\"\"],[\"noDataRowOutlet\",\"\"],[\"footerRowOutlet\",\"\"]],template:function(t,e){1&t&&(a.lc(at),a.kc(0),a.kc(1,1),a.Rb(2,0),a.Rb(3,1),a.Rb(4,2),a.Rb(5,3))},directives:[$,W,G,Y],styles:['mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\"\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n'],encapsulation:2}),t})();const ct=a.Xb(rt);let lt=(()=>{class t extends S{}return t.\\u0275fac=function(e){return dt(e||t)},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"matCellDef\",\"\"]],features:[a.Cb([{provide:S,useExisting:t}]),a.Ab]}),t})();const dt=a.Xb(lt);let ht=(()=>{class t extends C{}return t.\\u0275fac=function(e){return ut(e||t)},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"matHeaderCellDef\",\"\"]],features:[a.Cb([{provide:C,useExisting:t}]),a.Ab]}),t})();const ut=a.Xb(ht);let ft=(()=>{class t extends k{get name(){return this._name}set name(t){this._setNameInput(t)}_updateColumnCssClassName(){super._updateColumnCssClassName(),this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`)}}return t.\\u0275fac=function(e){return pt(e||t)},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"matColumnDef\",\"\"]],inputs:{sticky:\"sticky\",name:[\"matColumnDef\",\"name\"]},features:[a.Cb([{provide:k,useExisting:t},{provide:\"MAT_SORT_HEADER_COLUMN_DEF\",useExisting:t}]),a.Ab]}),t})();const pt=a.Xb(ft);let mt=(()=>{class t extends x{}return t.\\u0275fac=function(e){return bt(e||t)},t.\\u0275dir=a.Kb({type:t,selectors:[[\"mat-header-cell\"],[\"th\",\"mat-header-cell\",\"\"]],hostAttrs:[\"role\",\"columnheader\",1,\"mat-header-cell\"],features:[a.Ab]}),t})();const bt=a.Xb(mt);let gt=(()=>{class t extends P{}return t.\\u0275fac=function(e){return _t(e||t)},t.\\u0275dir=a.Kb({type:t,selectors:[[\"mat-cell\"],[\"td\",\"mat-cell\",\"\"]],hostAttrs:[\"role\",\"gridcell\",1,\"mat-cell\"],features:[a.Ab]}),t})();const _t=a.Xb(gt);let wt=(()=>{class t extends N{}return t.\\u0275fac=function(e){return yt(e||t)},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"matHeaderRowDef\",\"\"]],inputs:{columns:[\"matHeaderRowDef\",\"columns\"],sticky:[\"matHeaderRowDefSticky\",\"sticky\"]},features:[a.Cb([{provide:N,useExisting:t}]),a.Ab]}),t})();const yt=a.Xb(wt);let St=(()=>{class t extends M{}return t.\\u0275fac=function(e){return Ct(e||t)},t.\\u0275dir=a.Kb({type:t,selectors:[[\"\",\"matRowDef\",\"\"]],inputs:{columns:[\"matRowDefColumns\",\"columns\"],when:[\"matRowDefWhen\",\"when\"]},features:[a.Cb([{provide:M,useExisting:t}]),a.Ab]}),t})();const Ct=a.Xb(St);let vt=(()=>{class t extends B{}return t.\\u0275fac=function(e){return Dt(e||t)},t.\\u0275cmp=a.Jb({type:t,selectors:[[\"mat-header-row\"],[\"tr\",\"mat-header-row\",\"\"]],hostAttrs:[\"role\",\"row\",1,\"mat-header-row\"],exportAs:[\"matHeaderRow\"],features:[a.Cb([{provide:B,useExisting:t}]),a.Ab],decls:1,vars:0,consts:[[\"cdkCellOutlet\",\"\"]],template:function(t,e){1&t&&a.Rb(0,0)},directives:[H],encapsulation:2}),t})();const Dt=a.Xb(vt);let Rt=(()=>{class t extends U{}return t.\\u0275fac=function(e){return kt(e||t)},t.\\u0275cmp=a.Jb({type:t,selectors:[[\"mat-row\"],[\"tr\",\"mat-row\",\"\"]],hostAttrs:[\"role\",\"row\",1,\"mat-row\"],exportAs:[\"matRow\"],features:[a.Cb([{provide:U,useExisting:t}]),a.Ab],decls:1,vars:0,consts:[[\"cdkCellOutlet\",\"\"]],template:function(t,e){1&t&&a.Rb(0,0)},directives:[H],encapsulation:2}),t})();const kt=a.Xb(Rt);let Ot=(()=>{class t{}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275mod=a.Nb({type:t}),t.\\u0275inj=a.Mb({imports:[[tt,et.i],et.i]}),t})();class xt extends o.b{constructor(t=[]){super(),this._renderData=new u.a([]),this._filter=new u.a(\"\"),this._internalPageChanges=new d.a,this._renderChangesSubscription=null,this.sortingDataAccessor=(t,e)=>{const i=t[e];if(Object(s.a)(i)){const t=Number(i);return t<9007199254740991?t:i}return i},this.sortData=(t,e)=>{const i=e.active,s=e.direction;return i&&\"\"!=s?t.sort((t,e)=>{let o=this.sortingDataAccessor(t,i),a=this.sortingDataAccessor(e,i);const n=typeof o,r=typeof a;n!==r&&(\"number\"===n&&(o+=\"\"),\"number\"===r&&(a+=\"\"));let c=0;return null!=o&&null!=a?o>a?c=1:o<a&&(c=-1):null!=o?c=1:null!=a&&(c=-1),c*(\"asc\"==s?1:-1)}):t},this.filterPredicate=(t,e)=>{const i=Object.keys(t).reduce((e,i)=>e+t[i]+\"\\u25ec\",\"\").toLowerCase(),s=e.trim().toLowerCase();return-1!=i.indexOf(s)},this._data=new u.a(t),this._updateChangeSubscription()}get data(){return this._data.value}set data(t){this._data.next(t),this._renderChangesSubscription||this._filterData(t)}get filter(){return this._filter.value}set filter(t){this._filter.next(t),this._renderChangesSubscription||this._filterData(this.data)}get sort(){return this._sort}set sort(t){this._sort=t,this._updateChangeSubscription()}get paginator(){return this._paginator}set paginator(t){this._paginator=t,this._updateChangeSubscription()}_updateChangeSubscription(){var t;const e=this._sort?Object(it.a)(this._sort.sortChange,this._sort.initialized):Object(p.a)(null),i=this._paginator?Object(it.a)(this._paginator.page,this._internalPageChanges,this._paginator.initialized):Object(p.a)(null),s=this._data,o=Object(st.a)([s,this._filter]).pipe(Object(ot.a)(([t])=>this._filterData(t))),a=Object(st.a)([o,e]).pipe(Object(ot.a)(([t])=>this._orderData(t))),n=Object(st.a)([a,i]).pipe(Object(ot.a)(([t])=>this._pageData(t)));null===(t=this._renderChangesSubscription)||void 0===t||t.unsubscribe(),this._renderChangesSubscription=n.subscribe(t=>this._renderData.next(t))}_filterData(t){return this.filteredData=null==this.filter||\"\"===this.filter?t:t.filter(t=>this.filterPredicate(t,this.filter)),this.paginator&&this._updatePaginator(this.filteredData.length),this.filteredData}_orderData(t){return this.sort?this.sortData(t.slice(),this.sort):t}_pageData(t){if(!this.paginator)return t;const e=this.paginator.pageIndex*this.paginator.pageSize;return t.slice(e,e+this.paginator.pageSize)}_updatePaginator(t){Promise.resolve().then(()=>{const e=this.paginator;if(e&&(e.length=t,e.pageIndex>0)){const t=Math.ceil(e.length/e.pageSize)-1||0,i=Math.min(e.pageIndex,t);i!==e.pageIndex&&(e.pageIndex=i,this._internalPageChanges.next())}})}connect(){return this._renderChangesSubscription||this._updateChangeSubscription(),this._renderData}disconnect(){var t;null===(t=this._renderChangesSubscription)||void 0===t||t.unsubscribe(),this._renderChangesSubscription=null}}class Pt extends xt{}},Dh3D:function(t,e,i){\"use strict\";i.d(e,\"a\",function(){return _}),i.d(e,\"b\",function(){return R}),i.d(e,\"c\",function(){return k});var s=i(\"fXoL\"),o=i(\"8LU1\"),a=i(\"FKr1\"),n=i(\"FtGj\"),r=i(\"XNiG\"),c=i(\"VRyK\"),l=i(\"R0Ic\"),d=i(\"ofXK\"),h=i(\"u47x\");const u=[\"mat-sort-header\",\"\"];function f(t,e){if(1&t){const t=s.Wb();s.Vb(0,\"div\",3),s.cc(\"@arrowPosition.start\",function(){return s.yc(t),s.gc()._disableViewStateAnimation=!0})(\"@arrowPosition.done\",function(){return s.yc(t),s.gc()._disableViewStateAnimation=!1}),s.Qb(1,\"div\",4),s.Vb(2,\"div\",5),s.Qb(3,\"div\",6),s.Qb(4,\"div\",7),s.Qb(5,\"div\",8),s.Ub(),s.Ub()}if(2&t){const t=s.gc();s.mc(\"@arrowOpacity\",t._getArrowViewState())(\"@arrowPosition\",t._getArrowViewState())(\"@allowChildren\",t._getArrowDirectionState()),s.Db(2),s.mc(\"@indicator\",t._getArrowDirectionState()),s.Db(1),s.mc(\"@leftPointer\",t._getArrowDirectionState()),s.Db(1),s.mc(\"@rightPointer\",t._getArrowDirectionState())}}const p=[\"*\"],m=new s.s(\"MAT_SORT_DEFAULT_OPTIONS\");class b{}const g=Object(a.y)(Object(a.w)(b));let _=(()=>{class t extends g{constructor(t){super(),this._defaultOptions=t,this.sortables=new Map,this._stateChanges=new r.a,this.start=\"asc\",this._direction=\"\",this.sortChange=new s.o}get direction(){return this._direction}set direction(t){this._direction=t}get disableClear(){return this._disableClear}set disableClear(t){this._disableClear=Object(o.c)(t)}register(t){this.sortables.set(t.id,t)}deregister(t){this.sortables.delete(t.id)}sort(t){this.active!=t.id?(this.active=t.id,this.direction=t.start?t.start:this.start):this.direction=this.getNextSortDirection(t),this.sortChange.emit({active:this.active,direction:this.direction})}getNextSortDirection(t){var e,i,s;if(!t)return\"\";const o=null!==(i=null!==(e=null==t?void 0:t.disableClear)&&void 0!==e?e:this.disableClear)&&void 0!==i?i:!!(null===(s=this._defaultOptions)||void 0===s?void 0:s.disableClear);let a=function(t,e){let i=[\"asc\",\"desc\"];return\"desc\"==t&&i.reverse(),e||i.push(\"\"),i}(t.start||this.start,o),n=a.indexOf(this.direction)+1;return n>=a.length&&(n=0),a[n]}ngOnInit(){this._markInitialized()}ngOnChanges(){this._stateChanges.next()}ngOnDestroy(){this._stateChanges.complete()}}return t.\\u0275fac=function(e){return new(e||t)(s.Pb(m,8))},t.\\u0275dir=s.Kb({type:t,selectors:[[\"\",\"matSort\",\"\"]],hostAttrs:[1,\"mat-sort\"],inputs:{disabled:[\"matSortDisabled\",\"disabled\"],start:[\"matSortStart\",\"start\"],direction:[\"matSortDirection\",\"direction\"],disableClear:[\"matSortDisableClear\",\"disableClear\"],active:[\"matSortActive\",\"active\"]},outputs:{sortChange:\"matSortChange\"},exportAs:[\"matSort\"],features:[s.Ab,s.Bb]}),t})();const w=a.b.ENTERING+\" \"+a.a.STANDARD_CURVE,y={indicator:Object(l.o)(\"indicator\",[Object(l.l)(\"active-asc, asc\",Object(l.m)({transform:\"translateY(0px)\"})),Object(l.l)(\"active-desc, desc\",Object(l.m)({transform:\"translateY(10px)\"})),Object(l.n)(\"active-asc <=> active-desc\",Object(l.e)(w))]),leftPointer:Object(l.o)(\"leftPointer\",[Object(l.l)(\"active-asc, asc\",Object(l.m)({transform:\"rotate(-45deg)\"})),Object(l.l)(\"active-desc, desc\",Object(l.m)({transform:\"rotate(45deg)\"})),Object(l.n)(\"active-asc <=> active-desc\",Object(l.e)(w))]),rightPointer:Object(l.o)(\"rightPointer\",[Object(l.l)(\"active-asc, asc\",Object(l.m)({transform:\"rotate(45deg)\"})),Object(l.l)(\"active-desc, desc\",Object(l.m)({transform:\"rotate(-45deg)\"})),Object(l.n)(\"active-asc <=> active-desc\",Object(l.e)(w))]),arrowOpacity:Object(l.o)(\"arrowOpacity\",[Object(l.l)(\"desc-to-active, asc-to-active, active\",Object(l.m)({opacity:1})),Object(l.l)(\"desc-to-hint, asc-to-hint, hint\",Object(l.m)({opacity:.54})),Object(l.l)(\"hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void\",Object(l.m)({opacity:0})),Object(l.n)(\"* => asc, * => desc, * => active, * => hint, * => void\",Object(l.e)(\"0ms\")),Object(l.n)(\"* <=> *\",Object(l.e)(w))]),arrowPosition:Object(l.o)(\"arrowPosition\",[Object(l.n)(\"* => desc-to-hint, * => desc-to-active\",Object(l.e)(w,Object(l.i)([Object(l.m)({transform:\"translateY(-25%)\"}),Object(l.m)({transform:\"translateY(0)\"})]))),Object(l.n)(\"* => hint-to-desc, * => active-to-desc\",Object(l.e)(w,Object(l.i)([Object(l.m)({transform:\"translateY(0)\"}),Object(l.m)({transform:\"translateY(25%)\"})]))),Object(l.n)(\"* => asc-to-hint, * => asc-to-active\",Object(l.e)(w,Object(l.i)([Object(l.m)({transform:\"translateY(25%)\"}),Object(l.m)({transform:\"translateY(0)\"})]))),Object(l.n)(\"* => hint-to-asc, * => active-to-asc\",Object(l.e)(w,Object(l.i)([Object(l.m)({transform:\"translateY(0)\"}),Object(l.m)({transform:\"translateY(-25%)\"})]))),Object(l.l)(\"desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active\",Object(l.m)({transform:\"translateY(0)\"})),Object(l.l)(\"hint-to-desc, active-to-desc, desc\",Object(l.m)({transform:\"translateY(-25%)\"})),Object(l.l)(\"hint-to-asc, active-to-asc, asc\",Object(l.m)({transform:\"translateY(25%)\"}))]),allowChildren:Object(l.o)(\"allowChildren\",[Object(l.n)(\"* <=> *\",[Object(l.j)(\"@*\",Object(l.f)(),{optional:!0})])])};let S=(()=>{class t{constructor(){this.changes=new r.a,this.sortButtonLabel=t=>`Change sorting for ${t}`}}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275prov=Object(s.Lb)({factory:function(){return new t},token:t,providedIn:\"root\"}),t})();const C={provide:S,deps:[[new s.C,new s.L,S]],useFactory:function(t){return t||new S}};class v{}const D=Object(a.w)(v);let R=(()=>{class t extends D{constructor(t,e,i,s,o,a){super(),this._intl=t,this._changeDetectorRef=e,this._sort=i,this._columnDef=s,this._focusMonitor=o,this._elementRef=a,this._showIndicatorHint=!1,this._viewState={},this._arrowDirection=\"\",this._disableViewStateAnimation=!1,this.arrowPosition=\"after\",this._handleStateChanges()}get disableClear(){return this._disableClear}set disableClear(t){this._disableClear=Object(o.c)(t)}ngOnInit(){!this.id&&this._columnDef&&(this.id=this._columnDef.name),this._updateArrowDirection(),this._setAnimationTransitionState({toState:this._isSorted()?\"active\":this._arrowDirection}),this._sort.register(this)}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0).subscribe(t=>{const e=!!t;e!==this._showIndicatorHint&&(this._setIndicatorHintVisible(e),this._changeDetectorRef.markForCheck())})}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef),this._sort.deregister(this),this._rerenderSubscription.unsubscribe()}_setIndicatorHintVisible(t){this._isDisabled()&&t||(this._showIndicatorHint=t,this._isSorted()||(this._updateArrowDirection(),this._setAnimationTransitionState(this._showIndicatorHint?{fromState:this._arrowDirection,toState:\"hint\"}:{fromState:\"hint\",toState:this._arrowDirection})))}_setAnimationTransitionState(t){this._viewState=t||{},this._disableViewStateAnimation&&(this._viewState={toState:t.toState})}_toggleOnInteraction(){this._sort.sort(this),\"hint\"!==this._viewState.toState&&\"active\"!==this._viewState.toState||(this._disableViewStateAnimation=!0)}_handleClick(){this._isDisabled()||this._sort.sort(this)}_handleKeydown(t){this._isDisabled()||t.keyCode!==n.m&&t.keyCode!==n.e||(t.preventDefault(),this._toggleOnInteraction())}_isSorted(){return this._sort.active==this.id&&(\"asc\"===this._sort.direction||\"desc\"===this._sort.direction)}_getArrowDirectionState(){return`${this._isSorted()?\"active-\":\"\"}${this._arrowDirection}`}_getArrowViewState(){const t=this._viewState.fromState;return(t?`${t}-to-`:\"\")+this._viewState.toState}_updateArrowDirection(){this._arrowDirection=this._isSorted()?this._sort.direction:this.start||this._sort.start}_isDisabled(){return this._sort.disabled||this.disabled}_getAriaSortAttribute(){return this._isSorted()?\"asc\"==this._sort.direction?\"ascending\":\"descending\":\"none\"}_renderArrow(){return!this._isDisabled()||this._isSorted()}_handleStateChanges(){this._rerenderSubscription=Object(c.a)(this._sort.sortChange,this._sort._stateChanges,this._intl.changes).subscribe(()=>{this._isSorted()&&(this._updateArrowDirection(),\"hint\"!==this._viewState.toState&&\"active\"!==this._viewState.toState||(this._disableViewStateAnimation=!0),this._setAnimationTransitionState({fromState:this._arrowDirection,toState:\"active\"}),this._showIndicatorHint=!1),!this._isSorted()&&this._viewState&&\"active\"===this._viewState.toState&&(this._disableViewStateAnimation=!1,this._setAnimationTransitionState({fromState:\"active\",toState:this._arrowDirection})),this._changeDetectorRef.markForCheck()})}}return t.\\u0275fac=function(e){return new(e||t)(s.Pb(S),s.Pb(s.h),s.Pb(_,8),s.Pb(\"MAT_SORT_HEADER_COLUMN_DEF\",8),s.Pb(h.h),s.Pb(s.l))},t.\\u0275cmp=s.Jb({type:t,selectors:[[\"\",\"mat-sort-header\",\"\"]],hostAttrs:[1,\"mat-sort-header\"],hostVars:3,hostBindings:function(t,e){1&t&&s.cc(\"click\",function(){return e._handleClick()})(\"keydown\",function(t){return e._handleKeydown(t)})(\"mouseenter\",function(){return e._setIndicatorHintVisible(!0)})(\"mouseleave\",function(){return e._setIndicatorHintVisible(!1)}),2&t&&(s.Eb(\"aria-sort\",e._getAriaSortAttribute()),s.Hb(\"mat-sort-header-disabled\",e._isDisabled()))},inputs:{disabled:\"disabled\",arrowPosition:\"arrowPosition\",disableClear:\"disableClear\",id:[\"mat-sort-header\",\"id\"],start:\"start\"},exportAs:[\"matSortHeader\"],features:[s.Ab],attrs:u,ngContentSelectors:p,decls:4,vars:6,consts:[[\"role\",\"button\",1,\"mat-sort-header-container\",\"mat-focus-indicator\"],[1,\"mat-sort-header-content\"],[\"class\",\"mat-sort-header-arrow\",4,\"ngIf\"],[1,\"mat-sort-header-arrow\"],[1,\"mat-sort-header-stem\"],[1,\"mat-sort-header-indicator\"],[1,\"mat-sort-header-pointer-left\"],[1,\"mat-sort-header-pointer-right\"],[1,\"mat-sort-header-pointer-middle\"]],template:function(t,e){1&t&&(s.lc(),s.Vb(0,\"div\",0),s.Vb(1,\"div\",1),s.kc(2),s.Ub(),s.Hc(3,f,6,6,\"div\",2),s.Ub()),2&t&&(s.Hb(\"mat-sort-header-sorted\",e._isSorted())(\"mat-sort-header-position-before\",\"before\"==e.arrowPosition),s.Eb(\"tabindex\",e._isDisabled()?null:0),s.Db(3),s.mc(\"ngIf\",e._renderArrow()))},directives:[d.o],styles:[\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"],encapsulation:2,data:{animation:[y.indicator,y.leftPointer,y.rightPointer,y.arrowOpacity,y.arrowPosition,y.allowChildren]},changeDetection:0}),t})(),k=(()=>{class t{}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275mod=s.Nb({type:t}),t.\\u0275inj=s.Mb({providers:[C],imports:[[d.c,a.i]]}),t})()},M9IT:function(t,e,i){\"use strict\";i.d(e,\"a\",function(){return D}),i.d(e,\"b\",function(){return R});var s=i(\"ofXK\"),o=i(\"fXoL\"),a=i(\"FKr1\"),n=i(\"bTqV\"),r=i(\"d3UM\"),c=i(\"Qu3c\"),l=i(\"8LU1\"),d=i(\"XNiG\"),h=i(\"kmnG\");function u(t,e){if(1&t&&(o.Vb(0,\"mat-option\",19),o.Jc(1),o.Ub()),2&t){const t=e.$implicit;o.mc(\"value\",t),o.Db(1),o.Lc(\" \",t,\" \")}}function f(t,e){if(1&t){const t=o.Wb();o.Vb(0,\"mat-form-field\",16),o.Vb(1,\"mat-select\",17),o.cc(\"selectionChange\",function(e){return o.yc(t),o.gc(2)._changePageSize(e.value)}),o.Hc(2,u,2,2,\"mat-option\",18),o.Ub(),o.Ub()}if(2&t){const t=o.gc(2);o.mc(\"appearance\",t._formFieldAppearance)(\"color\",t.color),o.Db(1),o.mc(\"value\",t.pageSize)(\"disabled\",t.disabled)(\"aria-label\",t._intl.itemsPerPageLabel),o.Db(1),o.mc(\"ngForOf\",t._displayedPageSizeOptions)}}function p(t,e){if(1&t&&(o.Vb(0,\"div\",20),o.Jc(1),o.Ub()),2&t){const t=o.gc(2);o.Db(1),o.Kc(t.pageSize)}}function m(t,e){if(1&t&&(o.Vb(0,\"div\",12),o.Vb(1,\"div\",13),o.Jc(2),o.Ub(),o.Hc(3,f,3,6,\"mat-form-field\",14),o.Hc(4,p,2,1,\"div\",15),o.Ub()),2&t){const t=o.gc();o.Db(2),o.Lc(\" \",t._intl.itemsPerPageLabel,\" \"),o.Db(1),o.mc(\"ngIf\",t._displayedPageSizeOptions.length>1),o.Db(1),o.mc(\"ngIf\",t._displayedPageSizeOptions.length<=1)}}function b(t,e){if(1&t){const t=o.Wb();o.Vb(0,\"button\",21),o.cc(\"click\",function(){return o.yc(t),o.gc().firstPage()}),o.fc(),o.Vb(1,\"svg\",7),o.Qb(2,\"path\",22),o.Ub(),o.Ub()}if(2&t){const t=o.gc();o.mc(\"matTooltip\",t._intl.firstPageLabel)(\"matTooltipDisabled\",t._previousButtonsDisabled())(\"matTooltipPosition\",\"above\")(\"disabled\",t._previousButtonsDisabled()),o.Eb(\"aria-label\",t._intl.firstPageLabel)}}function g(t,e){if(1&t){const t=o.Wb();o.fc(),o.ec(),o.Vb(0,\"button\",23),o.cc(\"click\",function(){return o.yc(t),o.gc().lastPage()}),o.fc(),o.Vb(1,\"svg\",7),o.Qb(2,\"path\",24),o.Ub(),o.Ub()}if(2&t){const t=o.gc();o.mc(\"matTooltip\",t._intl.lastPageLabel)(\"matTooltipDisabled\",t._nextButtonsDisabled())(\"matTooltipPosition\",\"above\")(\"disabled\",t._nextButtonsDisabled()),o.Eb(\"aria-label\",t._intl.lastPageLabel)}}let _=(()=>{class t{constructor(){this.changes=new d.a,this.itemsPerPageLabel=\"Items per page:\",this.nextPageLabel=\"Next page\",this.previousPageLabel=\"Previous page\",this.firstPageLabel=\"First page\",this.lastPageLabel=\"Last page\",this.getRangeLabel=(t,e,i)=>{if(0==i||0==e)return`0 of ${i}`;const s=t*e;return`${s+1} \\u2013 ${s<(i=Math.max(i,0))?Math.min(s+e,i):s+e} of ${i}`}}}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275prov=Object(o.Lb)({factory:function(){return new t},token:t,providedIn:\"root\"}),t})();const w={provide:_,deps:[[new o.C,new o.L,_]],useFactory:function(t){return t||new _}},y=new o.s(\"MAT_PAGINATOR_DEFAULT_OPTIONS\");class S{}const C=Object(a.w)(Object(a.y)(S));let v=(()=>{class t extends C{constructor(t,e,i){if(super(),this._intl=t,this._changeDetectorRef=e,this._pageIndex=0,this._length=0,this._pageSizeOptions=[],this._hidePageSize=!1,this._showFirstLastButtons=!1,this.page=new o.o,this._intlChanges=t.changes.subscribe(()=>this._changeDetectorRef.markForCheck()),i){const{pageSize:t,pageSizeOptions:e,hidePageSize:s,showFirstLastButtons:o}=i;null!=t&&(this._pageSize=t),null!=e&&(this._pageSizeOptions=e),null!=s&&(this._hidePageSize=s),null!=o&&(this._showFirstLastButtons=o)}}get pageIndex(){return this._pageIndex}set pageIndex(t){this._pageIndex=Math.max(Object(l.f)(t),0),this._changeDetectorRef.markForCheck()}get length(){return this._length}set length(t){this._length=Object(l.f)(t),this._changeDetectorRef.markForCheck()}get pageSize(){return this._pageSize}set pageSize(t){this._pageSize=Math.max(Object(l.f)(t),0),this._updateDisplayedPageSizeOptions()}get pageSizeOptions(){return this._pageSizeOptions}set pageSizeOptions(t){this._pageSizeOptions=(t||[]).map(t=>Object(l.f)(t)),this._updateDisplayedPageSizeOptions()}get hidePageSize(){return this._hidePageSize}set hidePageSize(t){this._hidePageSize=Object(l.c)(t)}get showFirstLastButtons(){return this._showFirstLastButtons}set showFirstLastButtons(t){this._showFirstLastButtons=Object(l.c)(t)}ngOnInit(){this._initialized=!0,this._updateDisplayedPageSizeOptions(),this._markInitialized()}ngOnDestroy(){this._intlChanges.unsubscribe()}nextPage(){if(!this.hasNextPage())return;const t=this.pageIndex;this.pageIndex++,this._emitPageEvent(t)}previousPage(){if(!this.hasPreviousPage())return;const t=this.pageIndex;this.pageIndex--,this._emitPageEvent(t)}firstPage(){if(!this.hasPreviousPage())return;const t=this.pageIndex;this.pageIndex=0,this._emitPageEvent(t)}lastPage(){if(!this.hasNextPage())return;const t=this.pageIndex;this.pageIndex=this.getNumberOfPages()-1,this._emitPageEvent(t)}hasPreviousPage(){return this.pageIndex>=1&&0!=this.pageSize}hasNextPage(){const t=this.getNumberOfPages()-1;return this.pageIndex<t&&0!=this.pageSize}getNumberOfPages(){return this.pageSize?Math.ceil(this.length/this.pageSize):0}_changePageSize(t){const e=this.pageIndex;this.pageIndex=Math.floor(this.pageIndex*this.pageSize/t)||0,this.pageSize=t,this._emitPageEvent(e)}_nextButtonsDisabled(){return this.disabled||!this.hasNextPage()}_previousButtonsDisabled(){return this.disabled||!this.hasPreviousPage()}_updateDisplayedPageSizeOptions(){this._initialized&&(this.pageSize||(this._pageSize=0!=this.pageSizeOptions.length?this.pageSizeOptions[0]:50),this._displayedPageSizeOptions=this.pageSizeOptions.slice(),-1===this._displayedPageSizeOptions.indexOf(this.pageSize)&&this._displayedPageSizeOptions.push(this.pageSize),this._displayedPageSizeOptions.sort((t,e)=>t-e),this._changeDetectorRef.markForCheck())}_emitPageEvent(t){this.page.emit({previousPageIndex:t,pageIndex:this.pageIndex,pageSize:this.pageSize,length:this.length})}}return t.\\u0275fac=function(e){return new(e||t)(o.Pb(_),o.Pb(o.h),o.Pb(void 0))},t.\\u0275dir=o.Kb({type:t,inputs:{pageIndex:\"pageIndex\",length:\"length\",pageSize:\"pageSize\",pageSizeOptions:\"pageSizeOptions\",hidePageSize:\"hidePageSize\",showFirstLastButtons:\"showFirstLastButtons\",color:\"color\"},outputs:{page:\"page\"},features:[o.Ab]}),t})(),D=(()=>{class t extends v{constructor(t,e,i){super(t,e,i),i&&null!=i.formFieldAppearance&&(this._formFieldAppearance=i.formFieldAppearance)}}return t.\\u0275fac=function(e){return new(e||t)(o.Pb(_),o.Pb(o.h),o.Pb(y,8))},t.\\u0275cmp=o.Jb({type:t,selectors:[[\"mat-paginator\"]],hostAttrs:[\"role\",\"group\",1,\"mat-paginator\"],inputs:{disabled:\"disabled\"},exportAs:[\"matPaginator\"],features:[o.Ab],decls:14,vars:14,consts:[[1,\"mat-paginator-outer-container\"],[1,\"mat-paginator-container\"],[\"class\",\"mat-paginator-page-size\",4,\"ngIf\"],[1,\"mat-paginator-range-actions\"],[1,\"mat-paginator-range-label\"],[\"mat-icon-button\",\"\",\"type\",\"button\",\"class\",\"mat-paginator-navigation-first\",3,\"matTooltip\",\"matTooltipDisabled\",\"matTooltipPosition\",\"disabled\",\"click\",4,\"ngIf\"],[\"mat-icon-button\",\"\",\"type\",\"button\",1,\"mat-paginator-navigation-previous\",3,\"matTooltip\",\"matTooltipDisabled\",\"matTooltipPosition\",\"disabled\",\"click\"],[\"viewBox\",\"0 0 24 24\",\"focusable\",\"false\",1,\"mat-paginator-icon\"],[\"d\",\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"],[\"mat-icon-button\",\"\",\"type\",\"button\",1,\"mat-paginator-navigation-next\",3,\"matTooltip\",\"matTooltipDisabled\",\"matTooltipPosition\",\"disabled\",\"click\"],[\"d\",\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"],[\"mat-icon-button\",\"\",\"type\",\"button\",\"class\",\"mat-paginator-navigation-last\",3,\"matTooltip\",\"matTooltipDisabled\",\"matTooltipPosition\",\"disabled\",\"click\",4,\"ngIf\"],[1,\"mat-paginator-page-size\"],[1,\"mat-paginator-page-size-label\"],[\"class\",\"mat-paginator-page-size-select\",3,\"appearance\",\"color\",4,\"ngIf\"],[\"class\",\"mat-paginator-page-size-value\",4,\"ngIf\"],[1,\"mat-paginator-page-size-select\",3,\"appearance\",\"color\"],[3,\"value\",\"disabled\",\"aria-label\",\"selectionChange\"],[3,\"value\",4,\"ngFor\",\"ngForOf\"],[3,\"value\"],[1,\"mat-paginator-page-size-value\"],[\"mat-icon-button\",\"\",\"type\",\"button\",1,\"mat-paginator-navigation-first\",3,\"matTooltip\",\"matTooltipDisabled\",\"matTooltipPosition\",\"disabled\",\"click\"],[\"d\",\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"],[\"mat-icon-button\",\"\",\"type\",\"button\",1,\"mat-paginator-navigation-last\",3,\"matTooltip\",\"matTooltipDisabled\",\"matTooltipPosition\",\"disabled\",\"click\"],[\"d\",\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],template:function(t,e){1&t&&(o.Vb(0,\"div\",0),o.Vb(1,\"div\",1),o.Hc(2,m,5,3,\"div\",2),o.Vb(3,\"div\",3),o.Vb(4,\"div\",4),o.Jc(5),o.Ub(),o.Hc(6,b,3,5,\"button\",5),o.Vb(7,\"button\",6),o.cc(\"click\",function(){return e.previousPage()}),o.fc(),o.Vb(8,\"svg\",7),o.Qb(9,\"path\",8),o.Ub(),o.Ub(),o.ec(),o.Vb(10,\"button\",9),o.cc(\"click\",function(){return e.nextPage()}),o.fc(),o.Vb(11,\"svg\",7),o.Qb(12,\"path\",10),o.Ub(),o.Ub(),o.Hc(13,g,3,5,\"button\",11),o.Ub(),o.Ub(),o.Ub()),2&t&&(o.Db(2),o.mc(\"ngIf\",!e.hidePageSize),o.Db(3),o.Lc(\" \",e._intl.getRangeLabel(e.pageIndex,e.pageSize,e.length),\" \"),o.Db(1),o.mc(\"ngIf\",e.showFirstLastButtons),o.Db(1),o.mc(\"matTooltip\",e._intl.previousPageLabel)(\"matTooltipDisabled\",e._previousButtonsDisabled())(\"matTooltipPosition\",\"above\")(\"disabled\",e._previousButtonsDisabled()),o.Eb(\"aria-label\",e._intl.previousPageLabel),o.Db(3),o.mc(\"matTooltip\",e._intl.nextPageLabel)(\"matTooltipDisabled\",e._nextButtonsDisabled())(\"matTooltipPosition\",\"above\")(\"disabled\",e._nextButtonsDisabled()),o.Eb(\"aria-label\",e._intl.nextPageLabel),o.Db(3),o.mc(\"ngIf\",e.showFirstLastButtons))},directives:[s.o,n.a,c.a,h.c,r.a,s.n,a.m],styles:[\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"],encapsulation:2,changeDetection:0}),t})(),R=(()=>{class t{}return t.\\u0275fac=function(e){return new(e||t)},t.\\u0275mod=o.Nb({type:t}),t.\\u0275inj=o.Mb({providers:[w],imports:[[s.c,n.b,r.b,c.b,a.i]]}),t})()},rqBn:function(t,e,i){\"use strict\";i.d(e,\"a\",function(){return m});var s=i(\"fXoL\"),o=i(\"0MNC\"),a=i(\"tyNb\"),n=i(\"/t3+\"),r=i(\"bTqV\"),c=i(\"NFeN\"),l=i(\"XhcP\"),d=i(\"ofXK\"),h=i(\"CsTR\");const u=[\"sidenav\"];function f(t,e){if(1&t){const t=s.Wb();s.Vb(0,\"ng-material-multilevel-menu\",12),s.cc(\"selectedItem\",function(e){return s.yc(t),s.gc().selectedItem(e)}),s.Ub()}if(2&t){const t=s.gc();s.mc(\"configuration\",t.config)(\"items\",t.appitems)}}const p=[\"*\"];let m=(()=>{class t{constructor(t,e,i){this.router=i,this.config={paddingAtStart:!0,fontColor:\"white\",selectedListFontColor:\"white\"},this.appitems=[],this.role=\"NoAutorizado\",this.role=localStorage.getItem(\"role\"),console.log(\"this.role\",this.role),this.appitems=[],this.appitems=[{label:\"Herramientas\",items:[{label:\"Entregas\",link:\"/tablas/entregas\"},{label:\"Escrituracion\",link:\"/tablas/escrituracion\"},{label:\"Legalizaci\\xf3n\",link:\"/tablas/legalizacion\"},{label:\"Renovaci\\xf3n\",link:\"/tablas/renovaciones\"},{label:\"Seguimiento de subsidio\",link:\"/tablas/segumientos-subsidio\"},{label:\"Promesas\",link:\"/tablas/promesas\"},{label:\"Desembolso\",link:\"/tablas/desembolsos\"},{label:\"Ordenes\",link:\"/tablas/ordenes\"},{label:\"Subsidio\",link:\"/tablas/subsidios\"},{label:\"Recaudos\",link:\"/tablas/recaudos\"},{label:\"Trazabilidad\",link:\"/tablas/trazabilidad\"}]},{label:\"Reportes\",items:[{label:\"Escrituraci\\xf3n y Entregas\",link:\"/reporte/5\"},{label:\"Ordenes\",link:\"/reporte/4\"},{label:\"Promesas\",link:\"/reporte/7\"},{label:\"Recaudo\",link:\"/reporte/6\"},{label:\"Renovaci\\xf3n y subsidio\",link:\"/reporte/1\"},{label:\"Trazabilidad\",link:\"/reporte/2\"}]}],\"Administrador\"==this.role&&this.appitems.push({label:\"Configuracion\",items:[{label:\"Seleccion Proyectos\",link:\"/configuracion-proyectos\"},{label:\"Roles de Usuario\",link:\"/configuracion-roles\"},{label:\"Carga Datos\",link:\"/carga-informacion\"},{label:\"Auditoria\",link:\"/auditoria\"}]}),this.mobileQuery=e.matchMedia(\"(max-width: 1024px)\"),this.mobileQueryListener=()=>t.detectChanges(),this.mobileQuery.addListener(this.mobileQueryListener)}ngafterviewinit(){this.sidenav.close()}toggleAction(){this.sidenav.opened?this.sidenav.close():this.sidenav.open()}logout(){localStorage.removeItem(\"token\"),this.router.navigate([\"login\"])}ngOnDestroy(){this.mobileQuery.removeListener(this.mobileQueryListener),this.sidenav.close()}selectedItem(t){}}return t.\\u0275fac=function(e){return new(e||t)(s.Pb(s.h),s.Pb(o.c),s.Pb(a.c))},t.\\u0275cmp=s.Jb({type:t,selectors:[[\"app-layout\"]],viewQuery:function(t,e){if(1&t&&s.Oc(u,1),2&t){let t;s.vc(t=s.dc())&&(e.sidenav=t.first)}},ngContentSelectors:p,decls:24,vars:4,consts:[[\"mat-icon-button\",\"\",\"aria-label\",\"Example icon-button with menu icon\",1,\"example-icon\",3,\"click\"],[1,\"example-spacer\"],[1,\"btns-panel\"],[\"mat-icon-button\",\"\",\"aria-label\",\"Example icon-button with heart icon\",1,\"example-icon\",\"favorite-icon\",3,\"click\"],[1,\"layout\"],[\"mode\",\"side\",1,\"layout-sidebar\",3,\"opened\",\"mode\",\"fixedInViewport\",\"openedChange\"],[\"sidenav\",\"\"],[1,\"avatar-panel\"],[\"src\",\"./assets/img/login.png\",\"tabindex\",\"0\",1,\"avatar\"],[\"color\",\"white\"],[3,\"configuration\",\"items\",\"selectedItem\",4,\"ngIf\"],[1,\"layout-content\"],[3,\"configuration\",\"items\",\"selectedItem\"]],template:function(t,e){1&t&&(s.lc(),s.Vb(0,\"mat-toolbar\"),s.Vb(1,\"button\",0),s.cc(\"click\",function(){return e.toggleAction()}),s.Vb(2,\"mat-icon\"),s.Jc(3,\"menu\"),s.Ub(),s.Ub(),s.Vb(4,\"span\"),s.Jc(5,\"MacrosWeb\"),s.Ub(),s.Qb(6,\"span\",1),s.Vb(7,\"div\",2),s.Vb(8,\"button\",3),s.cc(\"click\",function(){return e.logout()}),s.Vb(9,\"mat-icon\"),s.Jc(10,\"logout\"),s.Ub(),s.Jc(11,\" Salir \"),s.Ub(),s.Ub(),s.Ub(),s.Vb(12,\"mat-sidenav-container\",4),s.Vb(13,\"mat-sidenav\",5,6),s.cc(\"openedChange\",function(t){return e.isShowSidebar=t}),s.Vb(15,\"div\"),s.Vb(16,\"div\",7),s.Qb(17,\"img\",8),s.Vb(18,\"h4\"),s.Jc(19,\"Bienvenido!\"),s.Ub(),s.Ub(),s.Qb(20,\"hr\",9),s.Hc(21,f,1,2,\"ng-material-multilevel-menu\",10),s.Ub(),s.Ub(),s.Vb(22,\"mat-sidenav-content\",11),s.kc(23),s.Ub(),s.Ub()),2&t&&(s.Db(13),s.mc(\"opened\",e.isShowSidebar)(\"mode\",e.mobileQuery.matches?\"over\":\"side\")(\"fixedInViewport\",e.mobileQuery.matches),s.Db(8),s.mc(\"ngIf\",\"NoAutorizado\"!=e.role))},directives:[n.a,r.a,c.a,l.b,l.a,d.o,l.c,h.b],styles:[\".layout[_ngcontent-%COMP%]{width:100%}.layout-sidebar[_ngcontent-%COMP%]{height:calc(100vh - 64px);background:#048c44;color:#fff;width:20em}.layout-sidebar[_ngcontent-%COMP%]   .avatar-panel[_ngcontent-%COMP%]{text-align:center}.layout-sidebar[_ngcontent-%COMP%]   .avatar-panel[_ngcontent-%COMP%]   .avatar[_ngcontent-%COMP%]{margin-top:16px;width:100px;height:100px;border-radius:50%;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.layout-sidebar[_ngcontent-%COMP%]   mat-list[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]{color:#fff}@media (max-width:576px){.layout-sidebar[_ngcontent-%COMP%]{width:218px}}.layout-content[_ngcontent-%COMP%]{background-color:#f6f7ff;height:calc(100vh - 64px)}@media (max-width:576px){.layout-content[_ngcontent-%COMP%]{width:100%}}mat-toolbar[_ngcontent-%COMP%]{background:#048c44;color:#fff}mat-toolbar[_ngcontent-%COMP%]   .btns-panel[_ngcontent-%COMP%]{padding:0 2em}.example-spacer[_ngcontent-%COMP%]{flex:1 1 auto}.NavLink[_ngcontent-%COMP%]{text-decoration:none;color:#fff!important}@media (max-width:1024px){mat-sidenav[_ngcontent-%COMP%]{height:100%!important}}\"]}),t})()}}]);","name":"0.af727016fa4cd86052de.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[0],{\n\n/***/ \"+0xr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ table_MatCell; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ table_MatCellDef; });\n__webpack_require__.d(__webpack_exports__, \"c\", function() { return /* binding */ table_MatColumnDef; });\n__webpack_require__.d(__webpack_exports__, \"d\", function() { return /* binding */ table_MatHeaderCell; });\n__webpack_require__.d(__webpack_exports__, \"e\", function() { return /* binding */ table_MatHeaderCellDef; });\n__webpack_require__.d(__webpack_exports__, \"f\", function() { return /* binding */ table_MatHeaderRow; });\n__webpack_require__.d(__webpack_exports__, \"g\", function() { return /* binding */ table_MatHeaderRowDef; });\n__webpack_require__.d(__webpack_exports__, \"h\", function() { return /* binding */ table_MatRow; });\n__webpack_require__.d(__webpack_exports__, \"i\", function() { return /* binding */ table_MatRowDef; });\n__webpack_require__.d(__webpack_exports__, \"j\", function() { return /* binding */ table_MatTable; });\n__webpack_require__.d(__webpack_exports__, \"k\", function() { return /* binding */ MatTableDataSource; });\n__webpack_require__.d(__webpack_exports__, \"l\", function() { return /* binding */ table_MatTableModule; });\n\n// UNUSED EXPORTS: MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatNoDataRow, MatTextColumn, _MatTableDataSource\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/fesm2015/coercion.js\nvar coercion = __webpack_require__(\"8LU1\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js\nvar collections = __webpack_require__(\"0EQZ\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js\nvar bidi = __webpack_require__(\"cH1L\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js\nvar platform = __webpack_require__(\"nLfN\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js + 10 modules\nvar scrolling = __webpack_require__(\"vxfF\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subject.js\nvar Subject = __webpack_require__(\"XNiG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/from.js + 6 modules\nvar from = __webpack_require__(\"Cfvw\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js\nvar BehaviorSubject = __webpack_require__(\"2Vo4\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/util/isObservable.js\nvar isObservable = __webpack_require__(\"7+OI\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/of.js\nvar of = __webpack_require__(\"LRne\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js\nvar takeUntil = __webpack_require__(\"1G5W\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/take.js\nvar take = __webpack_require__(\"IzEk\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js\n\n\n\n\n\n\n\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst _c1 = [\"caption\", \"colgroup, col\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Vb\" /* ɵɵelementStart */](0, \"th\", 3);\n        core[\"Jc\" /* ɵɵtext */](1);\n        core[\"Ub\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"gc\" /* ɵɵnextContext */]();\n        core[\"Ec\" /* ɵɵstyleProp */](\"text-align\", ctx_r0.justify);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Lc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r0.headerText, \" \");\n    }\n}\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Vb\" /* ɵɵelementStart */](0, \"td\", 4);\n        core[\"Jc\" /* ɵɵtext */](1);\n        core[\"Ub\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const data_r2 = ctx.$implicit;\n        const ctx_r1 = core[\"gc\" /* ɵɵnextContext */]();\n        core[\"Ec\" /* ɵɵstyleProp */](\"text-align\", ctx_r1.justify);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Lc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n    }\n}\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() { return this._sticky; }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = Object(coercion[\"c\" /* coerceBooleanProperty */])(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('text-column-options');\nlet table_CdkCellDef = /*@__PURE__*/ (() => {\n    class CdkCellDef {\n        constructor(/** @docs-private */ template) {\n            this.template = template;\n        }\n    }\n    CdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    CdkCellDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n    return CdkCellDef;\n})();\nlet table_CdkHeaderCellDef = /*@__PURE__*/ (() => {\n    class CdkHeaderCellDef {\n        constructor(/** @docs-private */ template) {\n            this.template = template;\n        }\n    }\n    CdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    CdkHeaderCellDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n    return CdkHeaderCellDef;\n})();\nlet table_CdkFooterCellDef = /*@__PURE__*/ (() => {\n    class CdkFooterCellDef {\n        constructor(/** @docs-private */ template) {\n            this.template = template;\n        }\n    }\n    CdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    CdkFooterCellDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n    return CdkFooterCellDef;\n})();\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = /*@__PURE__*/ mixinHasStickyInput(CdkColumnDefBase);\nlet table_CdkColumnDef = /*@__PURE__*/ (() => {\n    class CdkColumnDef extends _CdkColumnDefBase {\n        constructor(_table) {\n            super();\n            this._table = _table;\n            this._stickyEnd = false;\n        }\n        /** Unique name for this column. */\n        get name() { return this._name; }\n        set name(name) { this._setNameInput(name); }\n        /**\n         * Whether this column should be sticky positioned on the end of the row. Should make sure\n         * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n         * has been changed.\n         */\n        get stickyEnd() {\n            return this._stickyEnd;\n        }\n        set stickyEnd(v) {\n            const prevValue = this._stickyEnd;\n            this._stickyEnd = Object(coercion[\"c\" /* coerceBooleanProperty */])(v);\n            this._hasStickyChanged = prevValue !== this._stickyEnd;\n        }\n        /**\n         * Overridable method that sets the css classes that will be added to every cell in this\n         * column.\n         * In the future, columnCssClassName will change from type string[] to string and this\n         * will set a single string value.\n         * @docs-private\n         */\n        _updateColumnCssClassName() {\n            this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n        }\n        /**\n         * This has been extracted to a util because of TS 4 and VE.\n         * View Engine doesn't support property rename inheritance.\n         * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n         * @docs-private\n         */\n        _setNameInput(value) {\n            // If the directive is set without a name (updated programmatically), then this setter will\n            // trigger with an empty string and should not overwrite the programmatically set value.\n            if (value) {\n                this._name = value;\n                this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n                this._updateColumnCssClassName();\n            }\n        }\n    }\n    CdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(core[\"Pb\" /* ɵɵdirectiveInject */](CDK_TABLE, 8)); };\n    CdkColumnDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Ib\" /* ɵɵcontentQuery */](dirIndex, table_CdkCellDef, 1);\n                core[\"Ib\" /* ɵɵcontentQuery */](dirIndex, table_CdkHeaderCellDef, 1);\n                core[\"Ib\" /* ɵɵcontentQuery */](dirIndex, table_CdkFooterCellDef, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.cell = _t.first);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.headerCell = _t.first);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.footerCell = _t.first);\n            }\n        }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkColumnDef;\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\nlet table_CdkHeaderCell = /*@__PURE__*/ (() => {\n    class CdkHeaderCell extends BaseCdkCell {\n        constructor(columnDef, elementRef) {\n            super(columnDef, elementRef);\n        }\n    }\n    CdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(core[\"Pb\" /* ɵɵdirectiveInject */](table_CdkColumnDef), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    CdkHeaderCell.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkHeaderCell;\n})();\nlet table_CdkFooterCell = /*@__PURE__*/ (() => {\n    class CdkFooterCell extends BaseCdkCell {\n        constructor(columnDef, elementRef) {\n            super(columnDef, elementRef);\n        }\n    }\n    CdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(core[\"Pb\" /* ɵɵdirectiveInject */](table_CdkColumnDef), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    CdkFooterCell.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkFooterCell;\n})();\nlet table_CdkCell = /*@__PURE__*/ (() => {\n    class CdkCell extends BaseCdkCell {\n        constructor(columnDef, elementRef) {\n            super(columnDef, elementRef);\n        }\n    }\n    CdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(core[\"Pb\" /* ɵɵdirectiveInject */](table_CdkColumnDef), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    CdkCell.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkCell;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('_COALESCED_STYLE_SCHEDULER');\nlet table_CoalescedStyleScheduler = /*@__PURE__*/ (() => {\n    class _CoalescedStyleScheduler {\n        constructor(_ngZone) {\n            this._ngZone = _ngZone;\n            this._currentSchedule = null;\n            this._destroyed = new Subject[\"a\" /* Subject */]();\n        }\n        /**\n         * Schedules the specified task to run at the end of the current VM turn.\n         */\n        schedule(task) {\n            this._createScheduleIfNeeded();\n            this._currentSchedule.tasks.push(task);\n        }\n        /**\n         * Schedules the specified task to run after other scheduled tasks at the end of the current\n         * VM turn.\n         */\n        scheduleEnd(task) {\n            this._createScheduleIfNeeded();\n            this._currentSchedule.endTasks.push(task);\n        }\n        /** Prevent any further tasks from running. */\n        ngOnDestroy() {\n            this._destroyed.next();\n            this._destroyed.complete();\n        }\n        _createScheduleIfNeeded() {\n            if (this._currentSchedule) {\n                return;\n            }\n            this._currentSchedule = new _Schedule();\n            this._getScheduleObservable().pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._destroyed)).subscribe(() => {\n                while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                    const schedule = this._currentSchedule;\n                    // Capture new tasks scheduled by the current set of tasks.\n                    this._currentSchedule = new _Schedule();\n                    for (const task of schedule.tasks) {\n                        task();\n                    }\n                    for (const task of schedule.endTasks) {\n                        task();\n                    }\n                }\n                this._currentSchedule = null;\n            });\n        }\n        _getScheduleObservable() {\n            // Use onStable when in the context of an ongoing change detection cycle so that we\n            // do not accidentally trigger additional cycles.\n            return this._ngZone.isStable ?\n                Object(from[\"a\" /* from */])(Promise.resolve(undefined)) :\n                this._ngZone.onStable.pipe(Object(take[\"a\" /* take */])(1));\n        }\n    }\n    _CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(core[\"Zb\" /* ɵɵinject */](core[\"B\" /* NgZone */])); };\n    _CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ core[\"Lb\" /* ɵɵdefineInjectable */]({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\n    return _CoalescedStyleScheduler;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\nlet table_BaseRowDef = /*@__PURE__*/ (() => {\n    class BaseRowDef {\n        constructor(\n        /** @docs-private */ template, _differs) {\n            this.template = template;\n            this._differs = _differs;\n        }\n        ngOnChanges(changes) {\n            // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n            // of the columns property or an empty array if none is provided.\n            if (!this._columnsDiffer) {\n                const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n                this._columnsDiffer = this._differs.find(columns).create();\n                this._columnsDiffer.diff(columns);\n            }\n        }\n        /**\n         * Returns the difference between the current columns and the columns from the last diff, or null\n         * if there is no difference.\n         */\n        getColumnsDiff() {\n            return this._columnsDiffer.diff(this.columns);\n        }\n        /** Gets this row def's relevant cell template from the provided column def. */\n        extractCellTemplate(column) {\n            if (this instanceof table_CdkHeaderRowDef) {\n                return column.headerCell.template;\n            }\n            if (this instanceof table_CdkFooterRowDef) {\n                return column.footerCell.template;\n            }\n            else {\n                return column.cell.template;\n            }\n        }\n    }\n    BaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */])); };\n    BaseRowDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: BaseRowDef, features: [core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return BaseRowDef;\n})();\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends table_BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = /*@__PURE__*/ mixinHasStickyInput(CdkHeaderRowDefBase);\nlet table_CdkHeaderRowDef = /*@__PURE__*/ (() => {\n    class CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n        constructor(template, _differs, _table) {\n            super(template, _differs);\n            this._table = _table;\n        }\n        // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n        // Explicitly define it so that the method is called as part of the Angular lifecycle.\n        ngOnChanges(changes) {\n            super.ngOnChanges(changes);\n        }\n    }\n    CdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */]), core[\"Pb\" /* ɵɵdirectiveInject */](CDK_TABLE, 8)); };\n    CdkHeaderRowDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return CdkHeaderRowDef;\n})();\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends table_BaseRowDef {\n}\nconst _CdkFooterRowDefBase = /*@__PURE__*/ mixinHasStickyInput(CdkFooterRowDefBase);\nlet table_CdkFooterRowDef = /*@__PURE__*/ (() => {\n    class CdkFooterRowDef extends _CdkFooterRowDefBase {\n        constructor(template, _differs, _table) {\n            super(template, _differs);\n            this._table = _table;\n        }\n        // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n        // Explicitly define it so that the method is called as part of the Angular lifecycle.\n        ngOnChanges(changes) {\n            super.ngOnChanges(changes);\n        }\n    }\n    CdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */]), core[\"Pb\" /* ɵɵdirectiveInject */](CDK_TABLE, 8)); };\n    CdkFooterRowDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */], core[\"Bb\" /* ɵɵNgOnChangesFeature */]] });\n    return CdkFooterRowDef;\n})();\nlet table_CdkRowDef = /*@__PURE__*/ (() => {\n    class CdkRowDef extends table_BaseRowDef {\n        // TODO(andrewseguin): Add an input for providing a switch function to determine\n        //   if this template should be used.\n        constructor(template, _differs, _table) {\n            super(template, _differs);\n            this._table = _table;\n        }\n    }\n    CdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */]), core[\"Pb\" /* ɵɵdirectiveInject */](CDK_TABLE, 8)); };\n    CdkRowDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return CdkRowDef;\n})();\nlet table_CdkCellOutlet = /*@__PURE__*/ (() => {\n    class CdkCellOutlet {\n        constructor(_viewContainer) {\n            this._viewContainer = _viewContainer;\n            CdkCellOutlet.mostRecentCellOutlet = this;\n        }\n        ngOnDestroy() {\n            // If this was the last outlet being rendered in the view, remove the reference\n            // from the static property after it has been destroyed to avoid leaking memory.\n            if (CdkCellOutlet.mostRecentCellOutlet === this) {\n                CdkCellOutlet.mostRecentCellOutlet = null;\n            }\n        }\n    }\n    CdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */])); };\n    CdkCellOutlet.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    CdkCellOutlet.mostRecentCellOutlet = null;\n    return CdkCellOutlet;\n})();\nlet table_CdkHeaderRow = /*@__PURE__*/ (() => {\n    class CdkHeaderRow {\n    }\n    CdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\n    CdkHeaderRow.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Rb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return CdkHeaderRow;\n})();\nlet table_CdkFooterRow = /*@__PURE__*/ (() => {\n    class CdkFooterRow {\n    }\n    CdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\n    CdkFooterRow.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Rb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return CdkFooterRow;\n})();\nlet table_CdkRow = /*@__PURE__*/ (() => {\n    class CdkRow {\n    }\n    CdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\n    CdkRow.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Rb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return CdkRow;\n})();\nlet table_CdkNoDataRow = /*@__PURE__*/ (() => {\n    class CdkNoDataRow {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    }\n    CdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    CdkNoDataRow.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\n    return CdkNoDataRow;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \n    /**\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n            stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => stickyStartStates[index] ? width : null)\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1 ?\n                        [] :\n                        cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\n                            .reverse()\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            stickyOffsets[rowIndex] = stickyOffset;\n            if (!states[rowIndex]) {\n                continue;\n            }\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n                Array.from(row.children) : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._scheduleStyleChanges(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Schedules styles to be applied when the style scheduler deems appropriate.\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n     */\n    _scheduleStyleChanges(changes) {\n        if (this._coalescedStyleScheduler) {\n            this._coalescedStyleScheduler.schedule(changes);\n        }\n        else {\n            changes();\n        }\n    }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = /*@__PURE__*/ new core[\"s\" /* InjectionToken */]('CDK_SPL');\nlet table_DataRowOutlet = /*@__PURE__*/ (() => {\n    class DataRowOutlet {\n        constructor(viewContainer, elementRef) {\n            this.viewContainer = viewContainer;\n            this.elementRef = elementRef;\n        }\n    }\n    DataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    DataRowOutlet.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n    return DataRowOutlet;\n})();\nlet table_HeaderRowOutlet = /*@__PURE__*/ (() => {\n    class HeaderRowOutlet {\n        constructor(viewContainer, elementRef) {\n            this.viewContainer = viewContainer;\n            this.elementRef = elementRef;\n        }\n    }\n    HeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    HeaderRowOutlet.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n    return HeaderRowOutlet;\n})();\nlet table_FooterRowOutlet = /*@__PURE__*/ (() => {\n    class FooterRowOutlet {\n        constructor(viewContainer, elementRef) {\n            this.viewContainer = viewContainer;\n            this.elementRef = elementRef;\n        }\n    }\n    FooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    FooterRowOutlet.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n    return FooterRowOutlet;\n})();\nlet table_NoDataRowOutlet = /*@__PURE__*/ (() => {\n    class NoDataRowOutlet {\n        constructor(viewContainer, elementRef) {\n            this.viewContainer = viewContainer;\n            this.elementRef = elementRef;\n        }\n    }\n    NoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    NoDataRowOutlet.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\n    return NoDataRowOutlet;\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass table_RowViewRef extends core[\"m\" /* EmbeddedViewRef */] {\n}\nlet table_CdkTable = /*@__PURE__*/ (() => {\n    class CdkTable {\n        constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \n        /**\n         * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n         *    parameters to become required.\n         * @breaking-change 11.0.0\n         */\n        _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \n        // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\n        // this property will never be null.\n        // tslint:disable-next-line: lightweight-tokens\n        _viewportRuler) {\n            this._differs = _differs;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._elementRef = _elementRef;\n            this._dir = _dir;\n            this._platform = _platform;\n            this._viewRepeater = _viewRepeater;\n            this._coalescedStyleScheduler = _coalescedStyleScheduler;\n            this._stickyPositioningListener = _stickyPositioningListener;\n            this._viewportRuler = _viewportRuler;\n            /** Subject that emits when the component has been destroyed. */\n            this._onDestroy = new Subject[\"a\" /* Subject */]();\n            /**\n             * Map of all the user's defined columns (header, data, and footer cell template) identified by\n             * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n             * any custom column definitions added to `_customColumnDefs`.\n             */\n            this._columnDefsByName = new Map();\n            /**\n             * Column definitions that were defined outside of the direct content children of the table.\n             * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n             * column definitions as *its* content child.\n             */\n            this._customColumnDefs = new Set();\n            /**\n             * Data row definitions that were defined outside of the direct content children of the table.\n             * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n             * built-in data rows as *its* content child.\n             */\n            this._customRowDefs = new Set();\n            /**\n             * Header row definitions that were defined outside of the direct content children of the table.\n             * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n             * built-in header rows as *its* content child.\n             */\n            this._customHeaderRowDefs = new Set();\n            /**\n             * Footer row definitions that were defined outside of the direct content children of the table.\n             * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n             * built-in footer row as *its* content child.\n             */\n            this._customFooterRowDefs = new Set();\n            /**\n             * Whether the header row definition has been changed. Triggers an update to the header row after\n             * content is checked. Initialized as true so that the table renders the initial set of rows.\n             */\n            this._headerRowDefChanged = true;\n            /**\n             * Whether the footer row definition has been changed. Triggers an update to the footer row after\n             * content is checked. Initialized as true so that the table renders the initial set of rows.\n             */\n            this._footerRowDefChanged = true;\n            /**\n             * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n             * change.\n             */\n            this._stickyColumnStylesNeedReset = true;\n            /**\n             * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n             * `false`, cached values will be used instead. This is only applicable to tables with\n             * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n             */\n            this._forceRecalculateCellWidths = true;\n            /**\n             * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n             * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n             * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n             * and row template matches, which allows the `IterableDiffer` to check rows by reference\n             * and understand which rows are added/moved/removed.\n             *\n             * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n             * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n             * contains an array of created pairs. The array is necessary to handle cases where the data\n             * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n             * stored.\n             */\n            this._cachedRenderRowsMap = new Map();\n            /**\n             * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n             * table subclasses.\n             */\n            this.stickyCssClass = 'cdk-table-sticky';\n            /**\n             * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n             * the position is set in a selector associated with the value of stickyCssClass. May be\n             * overridden by table subclasses\n             */\n            this.needsPositionStickyOnElement = true;\n            /** Whether the no data row is currently showing anything. */\n            this._isShowingNoDataRow = false;\n            this._multiTemplateDataRows = false;\n            this._fixedLayout = false;\n            // TODO(andrewseguin): Remove max value as the end index\n            //   and instead calculate the view on init and scroll.\n            /**\n             * Stream containing the latest information on what rows are being displayed on screen.\n             * Can be used by the data source to as a heuristic of what data should be provided.\n             *\n             * @docs-private\n             */\n            this.viewChange = new BehaviorSubject[\"a\" /* BehaviorSubject */]({ start: 0, end: Number.MAX_VALUE });\n            if (!role) {\n                this._elementRef.nativeElement.setAttribute('role', 'grid');\n            }\n            this._document = _document;\n            this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n        }\n        /**\n         * Tracking function that will be used to check the differences in data changes. Used similarly\n         * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n         * relative to the function to know if a row should be added/removed/moved.\n         * Accepts a function that takes two parameters, `index` and `item`.\n         */\n        get trackBy() {\n            return this._trackByFn;\n        }\n        set trackBy(fn) {\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n                console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n            }\n            this._trackByFn = fn;\n        }\n        /**\n         * The table's source of data, which can be provided in three ways (in order of complexity):\n         *   - Simple data array (each object represents one table row)\n         *   - Stream that emits a data array each time the array changes\n         *   - `DataSource` object that implements the connect/disconnect interface.\n         *\n         * If a data array is provided, the table must be notified when the array's objects are\n         * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n         * render the diff since the last table render. If the data array reference is changed, the table\n         * will automatically trigger an update to the rows.\n         *\n         * When providing an Observable stream, the table will trigger an update automatically when the\n         * stream emits a new array of data.\n         *\n         * Finally, when providing a `DataSource` object, the table will use the Observable stream\n         * provided by the connect function and trigger updates when that stream emits new data array\n         * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n         * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n         * subscriptions registered during the connect process).\n         */\n        get dataSource() {\n            return this._dataSource;\n        }\n        set dataSource(dataSource) {\n            if (this._dataSource !== dataSource) {\n                this._switchDataSource(dataSource);\n            }\n        }\n        /**\n         * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n         * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n         * dataobject will render the first row that evaluates its when predicate to true, in the order\n         * defined in the table, or otherwise the default row which does not have a when predicate.\n         */\n        get multiTemplateDataRows() {\n            return this._multiTemplateDataRows;\n        }\n        set multiTemplateDataRows(v) {\n            this._multiTemplateDataRows = Object(coercion[\"c\" /* coerceBooleanProperty */])(v);\n            // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n            // this setter will be invoked before the row outlet has been defined hence the null check.\n            if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n                this._forceRenderDataRows();\n                this.updateStickyColumnStyles();\n            }\n        }\n        /**\n         * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n         * and optimize rendering sticky styles for native tables. No-op for flex tables.\n         */\n        get fixedLayout() {\n            return this._fixedLayout;\n        }\n        set fixedLayout(v) {\n            this._fixedLayout = Object(coercion[\"c\" /* coerceBooleanProperty */])(v);\n            // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n            this._forceRecalculateCellWidths = true;\n            this._stickyColumnStylesNeedReset = true;\n        }\n        ngOnInit() {\n            this._setupStickyStyler();\n            if (this._isNativeHtmlTable) {\n                this._applyNativeTableSections();\n            }\n            // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n            // the user has provided a custom trackBy, return the result of that function as evaluated\n            // with the values of the `RenderRow`'s data and index.\n            this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n                return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n            });\n            // Table cell dimensions may change after resizing the window. Signal the sticky styler to\n            // refresh its cache of cell widths the next time sticky styles are updated.\n            // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\n            if (this._viewportRuler) {\n                this._viewportRuler.change().pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._onDestroy)).subscribe(() => {\n                    this._forceRecalculateCellWidths = true;\n                });\n            }\n        }\n        ngAfterContentChecked() {\n            // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n            this._cacheRowDefs();\n            this._cacheColumnDefs();\n            // Make sure that the user has at least added header, footer, or data row def.\n            if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableMissingRowDefsError();\n            }\n            // Render updates if the list of columns have been changed for the header, row, or footer defs.\n            const columnsChanged = this._renderUpdatedColumns();\n            const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n            // Ensure sticky column styles are reset if set to `true` elsewhere.\n            this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n            this._forceRecalculateCellWidths = rowDefsChanged;\n            // If the header row definition has been changed, trigger a render to the header row.\n            if (this._headerRowDefChanged) {\n                this._forceRenderHeaderRows();\n                this._headerRowDefChanged = false;\n            }\n            // If the footer row definition has been changed, trigger a render to the footer row.\n            if (this._footerRowDefChanged) {\n                this._forceRenderFooterRows();\n                this._footerRowDefChanged = false;\n            }\n            // If there is a data source and row definitions, connect to the data source unless a\n            // connection has already been made.\n            if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n                this._observeRenderChanges();\n            }\n            else if (this._stickyColumnStylesNeedReset) {\n                // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n                // called when it row data arrives. Otherwise, we need to call it proactively.\n                this.updateStickyColumnStyles();\n            }\n            this._checkStickyStates();\n        }\n        ngOnDestroy() {\n            this._rowOutlet.viewContainer.clear();\n            this._noDataRowOutlet.viewContainer.clear();\n            this._headerRowOutlet.viewContainer.clear();\n            this._footerRowOutlet.viewContainer.clear();\n            this._cachedRenderRowsMap.clear();\n            this._onDestroy.next();\n            this._onDestroy.complete();\n            if (Object(collections[\"g\" /* isDataSource */])(this.dataSource)) {\n                this.dataSource.disconnect(this);\n            }\n        }\n        /**\n         * Renders rows based on the table's latest set of data, which was either provided directly as an\n         * input or retrieved through an Observable stream (directly or from a DataSource).\n         * Checks for differences in the data since the last diff to perform only the necessary\n         * changes (add/remove/move rows).\n         *\n         * If the table's data source is a DataSource or Observable, this will be invoked automatically\n         * each time the provided Observable stream emits a new data array. Otherwise if your data is\n         * an array, this function will need to be called to render any changes.\n         */\n        renderRows() {\n            this._renderRows = this._getAllRenderRows();\n            const changes = this._dataDiffer.diff(this._renderRows);\n            if (!changes) {\n                this._updateNoDataRow();\n                return;\n            }\n            const viewContainer = this._rowOutlet.viewContainer;\n            // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n            // `else` clause once `_viewRepeater` is turned into a required parameter.\n            if (this._viewRepeater) {\n                this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\n                    if (change.operation === 1 /* INSERTED */ && change.context) {\n                        this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n                    }\n                });\n            }\n            else {\n                changes.forEachOperation((record, prevIndex, currentIndex) => {\n                    if (record.previousIndex == null) {\n                        const renderRow = record.item;\n                        const rowDef = renderRow.rowDef;\n                        const context = { $implicit: renderRow.data };\n                        this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\n                    }\n                    else if (currentIndex == null) {\n                        viewContainer.remove(prevIndex);\n                    }\n                    else {\n                        const view = viewContainer.get(prevIndex);\n                        viewContainer.move(view, currentIndex);\n                    }\n                });\n            }\n            // Update the meta context of a row's context data (index, count, first, last, ...)\n            this._updateRowIndexContext();\n            // Update rows that did not get added/removed/moved but may have had their identity changed,\n            // e.g. if trackBy matched data on some property but the actual data reference changed.\n            changes.forEachIdentityChange((record) => {\n                const rowView = viewContainer.get(record.currentIndex);\n                rowView.context.$implicit = record.item.data;\n            });\n            this._updateNoDataRow();\n            this.updateStickyColumnStyles();\n        }\n        /** Adds a column definition that was not included as part of the content children. */\n        addColumnDef(columnDef) {\n            this._customColumnDefs.add(columnDef);\n        }\n        /** Removes a column definition that was not included as part of the content children. */\n        removeColumnDef(columnDef) {\n            this._customColumnDefs.delete(columnDef);\n        }\n        /** Adds a row definition that was not included as part of the content children. */\n        addRowDef(rowDef) {\n            this._customRowDefs.add(rowDef);\n        }\n        /** Removes a row definition that was not included as part of the content children. */\n        removeRowDef(rowDef) {\n            this._customRowDefs.delete(rowDef);\n        }\n        /** Adds a header row definition that was not included as part of the content children. */\n        addHeaderRowDef(headerRowDef) {\n            this._customHeaderRowDefs.add(headerRowDef);\n            this._headerRowDefChanged = true;\n        }\n        /** Removes a header row definition that was not included as part of the content children. */\n        removeHeaderRowDef(headerRowDef) {\n            this._customHeaderRowDefs.delete(headerRowDef);\n            this._headerRowDefChanged = true;\n        }\n        /** Adds a footer row definition that was not included as part of the content children. */\n        addFooterRowDef(footerRowDef) {\n            this._customFooterRowDefs.add(footerRowDef);\n            this._footerRowDefChanged = true;\n        }\n        /** Removes a footer row definition that was not included as part of the content children. */\n        removeFooterRowDef(footerRowDef) {\n            this._customFooterRowDefs.delete(footerRowDef);\n            this._footerRowDefChanged = true;\n        }\n        /** Sets a no data row definition that was not included as a part of the content children. */\n        setNoDataRow(noDataRow) {\n            this._customNoDataRow = noDataRow;\n        }\n        /**\n         * Updates the header sticky styles. First resets all applied styles with respect to the cells\n         * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n         * automatically called when the header row changes its displayed set of columns, or if its\n         * sticky input changes. May be called manually for cases where the cell content changes outside\n         * of these events.\n         */\n        updateStickyHeaderRowStyles() {\n            const headerRows = this._getRenderedRows(this._headerRowOutlet);\n            const tableElement = this._elementRef.nativeElement;\n            // Hide the thead element if there are no header rows. This is necessary to satisfy\n            // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n            // required child `row`.\n            const thead = tableElement.querySelector('thead');\n            if (thead) {\n                thead.style.display = headerRows.length ? '' : 'none';\n            }\n            const stickyStates = this._headerRowDefs.map(def => def.sticky);\n            this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n            this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n            // Reset the dirty state of the sticky input change since it has been used.\n            this._headerRowDefs.forEach(def => def.resetStickyChanged());\n        }\n        /**\n         * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n         * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n         * automatically called when the footer row changes its displayed set of columns, or if its\n         * sticky input changes. May be called manually for cases where the cell content changes outside\n         * of these events.\n         */\n        updateStickyFooterRowStyles() {\n            const footerRows = this._getRenderedRows(this._footerRowOutlet);\n            const tableElement = this._elementRef.nativeElement;\n            // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n            // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n            // required child `row`.\n            const tfoot = tableElement.querySelector('tfoot');\n            if (tfoot) {\n                tfoot.style.display = footerRows.length ? '' : 'none';\n            }\n            const stickyStates = this._footerRowDefs.map(def => def.sticky);\n            this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n            this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n            this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n            // Reset the dirty state of the sticky input change since it has been used.\n            this._footerRowDefs.forEach(def => def.resetStickyChanged());\n        }\n        /**\n         * Updates the column sticky styles. First resets all applied styles with respect to the cells\n         * sticking to the left and right. Then sticky styles are added for the left and right according\n         * to the column definitions for each cell in each row. This is automatically called when\n         * the data source provides a new set of data or when a column definition changes its sticky\n         * input. May be called manually for cases where the cell content changes outside of these events.\n         */\n        updateStickyColumnStyles() {\n            const headerRows = this._getRenderedRows(this._headerRowOutlet);\n            const dataRows = this._getRenderedRows(this._rowOutlet);\n            const footerRows = this._getRenderedRows(this._footerRowOutlet);\n            // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n            // In a table using a fixed layout, row content won't affect column width, so sticky styles\n            // don't need to be cleared unless either the sticky column config changes or one of the row\n            // defs change.\n            if ((this._isNativeHtmlTable && !this._fixedLayout)\n                || this._stickyColumnStylesNeedReset) {\n                // Clear the left and right positioning from all columns in the table across all rows since\n                // sticky columns span across all table sections (header, data, footer)\n                this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n                this._stickyColumnStylesNeedReset = false;\n            }\n            // Update the sticky styles for each header row depending on the def's sticky state\n            headerRows.forEach((headerRow, i) => {\n                this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n            });\n            // Update the sticky styles for each data row depending on its def's sticky state\n            this._rowDefs.forEach(rowDef => {\n                // Collect all the rows rendered with this row definition.\n                const rows = [];\n                for (let i = 0; i < dataRows.length; i++) {\n                    if (this._renderRows[i].rowDef === rowDef) {\n                        rows.push(dataRows[i]);\n                    }\n                }\n                this._addStickyColumnStyles(rows, rowDef);\n            });\n            // Update the sticky styles for each footer row depending on the def's sticky state\n            footerRows.forEach((footerRow, i) => {\n                this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n            });\n            // Reset the dirty state of the sticky input change since it has been used.\n            Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n        }\n        /**\n         * Get the list of RenderRow objects to render according to the current list of data and defined\n         * row definitions. If the previous list already contained a particular pair, it should be reused\n         * so that the differ equates their references.\n         */\n        _getAllRenderRows() {\n            const renderRows = [];\n            // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n            // new cache while unused ones can be picked up by garbage collection.\n            const prevCachedRenderRows = this._cachedRenderRowsMap;\n            this._cachedRenderRowsMap = new Map();\n            // For each data object, get the list of rows that should be rendered, represented by the\n            // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n            for (let i = 0; i < this._data.length; i++) {\n                let data = this._data[i];\n                const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n                if (!this._cachedRenderRowsMap.has(data)) {\n                    this._cachedRenderRowsMap.set(data, new WeakMap());\n                }\n                for (let j = 0; j < renderRowsForData.length; j++) {\n                    let renderRow = renderRowsForData[j];\n                    const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                    if (cache.has(renderRow.rowDef)) {\n                        cache.get(renderRow.rowDef).push(renderRow);\n                    }\n                    else {\n                        cache.set(renderRow.rowDef, [renderRow]);\n                    }\n                    renderRows.push(renderRow);\n                }\n            }\n            return renderRows;\n        }\n        /**\n         * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n         * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n         * `(T, CdkRowDef)` pair.\n         */\n        _getRenderRowsForData(data, dataIndex, cache) {\n            const rowDefs = this._getRowDefs(data, dataIndex);\n            return rowDefs.map(rowDef => {\n                const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\n                if (cachedRenderRows.length) {\n                    const dataRow = cachedRenderRows.shift();\n                    dataRow.dataIndex = dataIndex;\n                    return dataRow;\n                }\n                else {\n                    return { data, rowDef, dataIndex };\n                }\n            });\n        }\n        /** Update the map containing the content's column definitions. */\n        _cacheColumnDefs() {\n            this._columnDefsByName.clear();\n            const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n            columnDefs.forEach(columnDef => {\n                if (this._columnDefsByName.has(columnDef.name) &&\n                    (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw getTableDuplicateColumnNameError(columnDef.name);\n                }\n                this._columnDefsByName.set(columnDef.name, columnDef);\n            });\n        }\n        /** Update the list of all available row definitions that can be used. */\n        _cacheRowDefs() {\n            this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n            this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n            this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n            // After all row definitions are determined, find the row definition to be considered default.\n            const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n            if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableMultipleDefaultRowDefsError();\n            }\n            this._defaultRowDef = defaultRowDefs[0];\n        }\n        /**\n         * Check if the header, data, or footer rows have changed what columns they want to display or\n         * whether the sticky states have changed for the header or footer. If there is a diff, then\n         * re-render that section.\n         */\n        _renderUpdatedColumns() {\n            const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n            // Force re-render data rows if the list of column definitions have changed.\n            const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n            if (dataColumnsChanged) {\n                this._forceRenderDataRows();\n            }\n            // Force re-render header/footer rows if the list of column definitions have changed.\n            const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n            if (headerColumnsChanged) {\n                this._forceRenderHeaderRows();\n            }\n            const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n            if (footerColumnsChanged) {\n                this._forceRenderFooterRows();\n            }\n            return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n        }\n        /**\n         * Switch to the provided data source by resetting the data and unsubscribing from the current\n         * render change subscription if one exists. If the data source is null, interpret this by\n         * clearing the row outlet. Otherwise start listening for new data.\n         */\n        _switchDataSource(dataSource) {\n            this._data = [];\n            if (Object(collections[\"g\" /* isDataSource */])(this.dataSource)) {\n                this.dataSource.disconnect(this);\n            }\n            // Stop listening for data from the previous data source.\n            if (this._renderChangeSubscription) {\n                this._renderChangeSubscription.unsubscribe();\n                this._renderChangeSubscription = null;\n            }\n            if (!dataSource) {\n                if (this._dataDiffer) {\n                    this._dataDiffer.diff([]);\n                }\n                this._rowOutlet.viewContainer.clear();\n            }\n            this._dataSource = dataSource;\n        }\n        /** Set up a subscription for the data provided by the data source. */\n        _observeRenderChanges() {\n            // If no data source has been set, there is nothing to observe for changes.\n            if (!this.dataSource) {\n                return;\n            }\n            let dataStream;\n            if (Object(collections[\"g\" /* isDataSource */])(this.dataSource)) {\n                dataStream = this.dataSource.connect(this);\n            }\n            else if (Object(isObservable[\"a\" /* isObservable */])(this.dataSource)) {\n                dataStream = this.dataSource;\n            }\n            else if (Array.isArray(this.dataSource)) {\n                dataStream = Object(of[\"a\" /* of */])(this.dataSource);\n            }\n            if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownDataSourceError();\n            }\n            this._renderChangeSubscription = dataStream.pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._onDestroy))\n                .subscribe(data => {\n                this._data = data || [];\n                this.renderRows();\n            });\n        }\n        /**\n         * Clears any existing content in the header row outlet and creates a new embedded view\n         * in the outlet using the header row definition.\n         */\n        _forceRenderHeaderRows() {\n            // Clear the header row outlet if any content exists.\n            if (this._headerRowOutlet.viewContainer.length > 0) {\n                this._headerRowOutlet.viewContainer.clear();\n            }\n            this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n            this.updateStickyHeaderRowStyles();\n        }\n        /**\n         * Clears any existing content in the footer row outlet and creates a new embedded view\n         * in the outlet using the footer row definition.\n         */\n        _forceRenderFooterRows() {\n            // Clear the footer row outlet if any content exists.\n            if (this._footerRowOutlet.viewContainer.length > 0) {\n                this._footerRowOutlet.viewContainer.clear();\n            }\n            this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n            this.updateStickyFooterRowStyles();\n        }\n        /** Adds the sticky column styles for the rows according to the columns' stick states. */\n        _addStickyColumnStyles(rows, rowDef) {\n            const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n                const columnDef = this._columnDefsByName.get(columnName);\n                if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw getTableUnknownColumnError(columnName);\n                }\n                return columnDef;\n            });\n            const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n            const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n            this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n        }\n        /** Gets the list of rows that have been rendered in the row outlet. */\n        _getRenderedRows(rowOutlet) {\n            const renderedRows = [];\n            for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n                const viewRef = rowOutlet.viewContainer.get(i);\n                renderedRows.push(viewRef.rootNodes[0]);\n            }\n            return renderedRows;\n        }\n        /**\n         * Get the matching row definitions that should be used for this row data. If there is only\n         * one row definition, it is returned. Otherwise, find the row definitions that has a when\n         * predicate that returns true with the data. If none return true, return the default row\n         * definition.\n         */\n        _getRowDefs(data, dataIndex) {\n            if (this._rowDefs.length == 1) {\n                return [this._rowDefs[0]];\n            }\n            let rowDefs = [];\n            if (this.multiTemplateDataRows) {\n                rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n            }\n            else {\n                let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n                if (rowDef) {\n                    rowDefs.push(rowDef);\n                }\n            }\n            if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableMissingMatchingRowDefError(data);\n            }\n            return rowDefs;\n        }\n        _getEmbeddedViewArgs(renderRow, index) {\n            const rowDef = renderRow.rowDef;\n            const context = { $implicit: renderRow.data };\n            return {\n                templateRef: rowDef.template,\n                context,\n                index,\n            };\n        }\n        /**\n         * Creates a new row template in the outlet and fills it with the set of cell templates.\n         * Optionally takes a context to provide to the row and cells, as well as an optional index\n         * of where to place the new row template in the outlet.\n         */\n        _renderRow(outlet, rowDef, index, context = {}) {\n            // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n            const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n            this._renderCellTemplateForItem(rowDef, context);\n            return view;\n        }\n        _renderCellTemplateForItem(rowDef, context) {\n            for (let cellTemplate of this._getCellTemplates(rowDef)) {\n                if (table_CdkCellOutlet.mostRecentCellOutlet) {\n                    table_CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n        /**\n         * Updates the index-related context for each row to reflect any changes in the index of the rows,\n         * e.g. first/last/even/odd.\n         */\n        _updateRowIndexContext() {\n            const viewContainer = this._rowOutlet.viewContainer;\n            for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n                const viewRef = viewContainer.get(renderIndex);\n                const context = viewRef.context;\n                context.count = count;\n                context.first = renderIndex === 0;\n                context.last = renderIndex === count - 1;\n                context.even = renderIndex % 2 === 0;\n                context.odd = !context.even;\n                if (this.multiTemplateDataRows) {\n                    context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                    context.renderIndex = renderIndex;\n                }\n                else {\n                    context.index = this._renderRows[renderIndex].dataIndex;\n                }\n            }\n        }\n        /** Gets the column definitions for the provided row def. */\n        _getCellTemplates(rowDef) {\n            if (!rowDef || !rowDef.columns) {\n                return [];\n            }\n            return Array.from(rowDef.columns, columnId => {\n                const column = this._columnDefsByName.get(columnId);\n                if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw getTableUnknownColumnError(columnId);\n                }\n                return rowDef.extractCellTemplate(column);\n            });\n        }\n        /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n        _applyNativeTableSections() {\n            const documentFragment = this._document.createDocumentFragment();\n            const sections = [\n                { tag: 'thead', outlets: [this._headerRowOutlet] },\n                { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n                { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n            ];\n            for (const section of sections) {\n                const element = this._document.createElement(section.tag);\n                element.setAttribute('role', 'rowgroup');\n                for (const outlet of section.outlets) {\n                    element.appendChild(outlet.elementRef.nativeElement);\n                }\n                documentFragment.appendChild(element);\n            }\n            // Use a DocumentFragment so we don't hit the DOM on each iteration.\n            this._elementRef.nativeElement.appendChild(documentFragment);\n        }\n        /**\n         * Forces a re-render of the data rows. Should be called in cases where there has been an input\n         * change that affects the evaluation of which rows should be rendered, e.g. toggling\n         * `multiTemplateDataRows` or adding/removing row definitions.\n         */\n        _forceRenderDataRows() {\n            this._dataDiffer.diff([]);\n            this._rowOutlet.viewContainer.clear();\n            this.renderRows();\n        }\n        /**\n         * Checks if there has been a change in sticky states since last check and applies the correct\n         * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n         * during a change detection and after the inputs are settled (after content check).\n         */\n        _checkStickyStates() {\n            const stickyCheckReducer = (acc, d) => {\n                return acc || d.hasStickyChanged();\n            };\n            // Note that the check needs to occur for every definition since it notifies the definition\n            // that it can reset its dirty state. Using another operator like `some` may short-circuit\n            // remaining definitions and leave them in an unchecked state.\n            if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n                this.updateStickyHeaderRowStyles();\n            }\n            if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n                this.updateStickyFooterRowStyles();\n            }\n            if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n                this._stickyColumnStylesNeedReset = true;\n                this.updateStickyColumnStyles();\n            }\n        }\n        /**\n         * Creates the sticky styler that will be used for sticky rows and columns. Listens\n         * for directionality changes and provides the latest direction to the styler. Re-applies column\n         * stickiness when directionality changes.\n         */\n        _setupStickyStyler() {\n            const direction = this._dir ? this._dir.value : 'ltr';\n            this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n            (this._dir ? this._dir.change : Object(of[\"a\" /* of */])())\n                .pipe(Object(takeUntil[\"a\" /* takeUntil */])(this._onDestroy))\n                .subscribe(value => {\n                this._stickyStyler.direction = value;\n                this.updateStickyColumnStyles();\n            });\n        }\n        /** Filters definitions that belong to this table from a QueryList. */\n        _getOwnDefs(items) {\n            return items.filter(item => !item._table || item._table === this);\n        }\n        /** Creates or removes the no data row, depending on whether any data is being shown. */\n        _updateNoDataRow() {\n            const noDataRow = this._customNoDataRow || this._noDataRow;\n            if (noDataRow) {\n                const shouldShow = this._rowOutlet.viewContainer.length === 0;\n                if (shouldShow !== this._isShowingNoDataRow) {\n                    const container = this._noDataRowOutlet.viewContainer;\n                    shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\n                    this._isShowingNoDataRow = shouldShow;\n                }\n            }\n        }\n    }\n    CdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(core[\"Pb\" /* ɵɵdirectiveInject */](core[\"u\" /* IterableDiffers */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Pb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"ac\" /* ɵɵinjectAttribute */]('role'), core[\"Pb\" /* ɵɵdirectiveInject */](bidi[\"c\" /* Directionality */], 8), core[\"Pb\" /* ɵɵdirectiveInject */](common[\"e\" /* DOCUMENT */]), core[\"Pb\" /* ɵɵdirectiveInject */](platform[\"a\" /* Platform */]), core[\"Pb\" /* ɵɵdirectiveInject */](collections[\"f\" /* _VIEW_REPEATER_STRATEGY */], 8), core[\"Pb\" /* ɵɵdirectiveInject */](_COALESCED_STYLE_SCHEDULER, 8), core[\"Pb\" /* ɵɵdirectiveInject */](STICKY_POSITIONING_LISTENER, 12), core[\"Pb\" /* ɵɵdirectiveInject */](scrolling[\"e\" /* ViewportRuler */], 8)); };\n    CdkTable.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Ib\" /* ɵɵcontentQuery */](dirIndex, table_CdkNoDataRow, 1);\n                core[\"Ib\" /* ɵɵcontentQuery */](dirIndex, table_CdkColumnDef, 1);\n                core[\"Ib\" /* ɵɵcontentQuery */](dirIndex, table_CdkRowDef, 1);\n                core[\"Ib\" /* ɵɵcontentQuery */](dirIndex, table_CdkHeaderRowDef, 1);\n                core[\"Ib\" /* ɵɵcontentQuery */](dirIndex, table_CdkFooterRowDef, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._noDataRow = _t.first);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._contentColumnDefs = _t);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._contentRowDefs = _t);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._contentHeaderRowDefs = _t);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._contentFooterRowDefs = _t);\n            }\n        }, viewQuery: function CdkTable_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Oc\" /* ɵɵviewQuery */](table_DataRowOutlet, 3);\n                core[\"Oc\" /* ɵɵviewQuery */](table_HeaderRowOutlet, 3);\n                core[\"Oc\" /* ɵɵviewQuery */](table_FooterRowOutlet, 3);\n                core[\"Oc\" /* ɵɵviewQuery */](table_NoDataRowOutlet, 3);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._rowOutlet = _t.first);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._headerRowOutlet = _t.first);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._footerRowOutlet = _t.first);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._noDataRowOutlet = _t.first);\n            }\n        }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Hb\" /* ɵɵclassProp */](\"cdk-table-fixed-layout\", ctx.fixedLayout);\n            }\n        }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: CDK_TABLE, useExisting: CdkTable },\n                { provide: collections[\"f\" /* _VIEW_REPEATER_STRATEGY */], useClass: collections[\"d\" /* _DisposeViewRepeaterStrategy */] },\n                { provide: _COALESCED_STYLE_SCHEDULER, useClass: table_CoalescedStyleScheduler },\n                // Prevent nested tables from seeing this table's StickyPositioningListener.\n                { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n            ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"lc\" /* ɵɵprojectionDef */](_c0);\n                core[\"kc\" /* ɵɵprojection */](0);\n                core[\"kc\" /* ɵɵprojection */](1, 1);\n                core[\"Rb\" /* ɵɵelementContainer */](2, 0);\n                core[\"Rb\" /* ɵɵelementContainer */](3, 1);\n                core[\"Rb\" /* ɵɵelementContainer */](4, 2);\n                core[\"Rb\" /* ɵɵelementContainer */](5, 3);\n            }\n        }, directives: [table_HeaderRowOutlet, table_DataRowOutlet, table_NoDataRowOutlet, table_FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\n    return CdkTable;\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\nlet table_CdkTextColumn = /*@__PURE__*/ (() => {\n    class CdkTextColumn {\n        constructor(\n        // `CdkTextColumn` is always requiring a table, but we just assert it manually\n        // for better error reporting.\n        // tslint:disable-next-line: lightweight-tokens\n        _table, _options) {\n            this._table = _table;\n            this._options = _options;\n            /** Alignment of the cell values. */\n            this.justify = 'start';\n            this._options = _options || {};\n        }\n        /** Column name that should be used to reference this column. */\n        get name() {\n            return this._name;\n        }\n        set name(name) {\n            this._name = name;\n            // With Ivy, inputs can be initialized before static query results are\n            // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n            this._syncColumnDefName();\n        }\n        ngOnInit() {\n            this._syncColumnDefName();\n            if (this.headerText === undefined) {\n                this.headerText = this._createDefaultHeaderText();\n            }\n            if (!this.dataAccessor) {\n                this.dataAccessor =\n                    this._options.defaultDataAccessor || ((data, name) => data[name]);\n            }\n            if (this._table) {\n                // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n                // since the columnDef will not pick up its content by the time the table finishes checking\n                // its content and initializing the rows.\n                this.columnDef.cell = this.cell;\n                this.columnDef.headerCell = this.headerCell;\n                this._table.addColumnDef(this.columnDef);\n            }\n            else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                throw getTableTextColumnMissingParentTableError();\n            }\n        }\n        ngOnDestroy() {\n            if (this._table) {\n                this._table.removeColumnDef(this.columnDef);\n            }\n        }\n        /**\n         * Creates a default header text. Use the options' header text transformation function if one\n         * has been provided. Otherwise simply capitalize the column name.\n         */\n        _createDefaultHeaderText() {\n            const name = this.name;\n            if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableTextColumnMissingNameError();\n            }\n            if (this._options && this._options.defaultHeaderTextTransform) {\n                return this._options.defaultHeaderTextTransform(name);\n            }\n            return name[0].toUpperCase() + name.slice(1);\n        }\n        /** Synchronizes the column definition name with the text column name. */\n        _syncColumnDefName() {\n            if (this.columnDef) {\n                this.columnDef.name = this.name;\n            }\n        }\n    }\n    CdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(core[\"Pb\" /* ɵɵdirectiveInject */](table_CdkTable, 8), core[\"Pb\" /* ɵɵdirectiveInject */](TEXT_COLUMN_OPTIONS, 8)); };\n    CdkTextColumn.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Oc\" /* ɵɵviewQuery */](table_CdkColumnDef, 3);\n                core[\"Oc\" /* ɵɵviewQuery */](table_CdkCellDef, 3);\n                core[\"Oc\" /* ɵɵviewQuery */](table_CdkHeaderCellDef, 3);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.columnDef = _t.first);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.cell = _t.first);\n                core[\"vc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.headerCell = _t.first);\n            }\n        }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Tb\" /* ɵɵelementContainerStart */](0, 0);\n                core[\"Hc\" /* ɵɵtemplate */](1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n                core[\"Hc\" /* ɵɵtemplate */](2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n                core[\"Sb\" /* ɵɵelementContainerEnd */]();\n            }\n        }, directives: [table_CdkColumnDef, table_CdkHeaderCellDef, table_CdkCellDef, table_CdkHeaderCell, table_CdkCell], encapsulation: 2 });\n    return CdkTextColumn;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    table_CdkTable,\n    table_CdkRowDef,\n    table_CdkCellDef,\n    table_CdkCellOutlet,\n    table_CdkHeaderCellDef,\n    table_CdkFooterCellDef,\n    table_CdkColumnDef,\n    table_CdkCell,\n    table_CdkRow,\n    table_CdkHeaderCell,\n    table_CdkFooterCell,\n    table_CdkHeaderRow,\n    table_CdkHeaderRowDef,\n    table_CdkFooterRow,\n    table_CdkFooterRowDef,\n    table_DataRowOutlet,\n    table_HeaderRowOutlet,\n    table_FooterRowOutlet,\n    table_CdkTextColumn,\n    table_CdkNoDataRow,\n    table_NoDataRowOutlet,\n];\nlet table_CdkTableModule = /*@__PURE__*/ (() => {\n    class CdkTableModule {\n    }\n    CdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\n    CdkTableModule.ɵmod = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineNgModule */]({ type: CdkTableModule });\n    CdkTableModule.ɵinj = /*@__PURE__*/ core[\"Mb\" /* ɵɵdefineInjector */]({ imports: [[scrolling[\"d\" /* ScrollingModule */]]] });\n    return CdkTableModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](table_CdkTableModule, { declarations: function () { return [table_CdkTable, table_CdkRowDef, table_CdkCellDef, table_CdkCellOutlet, table_CdkHeaderCellDef, table_CdkFooterCellDef, table_CdkColumnDef, table_CdkCell, table_CdkRow, table_CdkHeaderCell, table_CdkFooterCell, table_CdkHeaderRow, table_CdkHeaderRowDef, table_CdkFooterRow, table_CdkFooterRowDef, table_DataRowOutlet, table_HeaderRowOutlet, table_FooterRowOutlet, table_CdkTextColumn, table_CdkNoDataRow, table_NoDataRowOutlet]; }, imports: function () { return [scrolling[\"d\" /* ScrollingModule */]]; }, exports: function () { return [table_CdkTable, table_CdkRowDef, table_CdkCellDef, table_CdkCellOutlet, table_CdkHeaderCellDef, table_CdkFooterCellDef, table_CdkColumnDef, table_CdkCell, table_CdkRow, table_CdkHeaderCell, table_CdkFooterCell, table_CdkHeaderRow, table_CdkHeaderRowDef, table_CdkFooterRow, table_CdkFooterRowDef, table_DataRowOutlet, table_HeaderRowOutlet, table_FooterRowOutlet, table_CdkTextColumn, table_CdkNoDataRow, table_NoDataRowOutlet]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=table.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js + 1 modules\nvar fesm2015_core = __webpack_require__(\"FKr1\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/merge.js\nvar merge = __webpack_require__(\"VRyK\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js + 3 modules\nvar combineLatest = __webpack_require__(\"itXk\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/map.js\nvar map = __webpack_require__(\"lJxs\");\n\n// CONCATENATED MODULE: ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n\n\nconst table_c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\nconst table_c1 = [\"caption\", \"colgroup, col\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Vb\" /* ɵɵelementStart */](0, \"th\", 3);\n        core[\"Jc\" /* ɵɵtext */](1);\n        core[\"Ub\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"gc\" /* ɵɵnextContext */]();\n        core[\"Ec\" /* ɵɵstyleProp */](\"text-align\", ctx_r0.justify);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Lc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r0.headerText, \" \");\n    }\n}\nfunction MatTextColumn_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Vb\" /* ɵɵelementStart */](0, \"td\", 4);\n        core[\"Jc\" /* ɵɵtext */](1);\n        core[\"Ub\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const data_r2 = ctx.$implicit;\n        const ctx_r1 = core[\"gc\" /* ɵɵnextContext */]();\n        core[\"Ec\" /* ɵɵstyleProp */](\"text-align\", ctx_r1.justify);\n        core[\"Db\" /* ɵɵadvance */](1);\n        core[\"Lc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n    }\n}\nlet table_MatTable = /*@__PURE__*/ (() => {\n    class MatTable extends table_CdkTable {\n        constructor() {\n            super(...arguments);\n            /** Overrides the sticky CSS class set by the `CdkTable`. */\n            this.stickyCssClass = 'mat-table-sticky';\n            /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n            this.needsPositionStickyOnElement = false;\n        }\n    }\n    MatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\n    MatTable.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], hostVars: 2, hostBindings: function MatTable_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Hb\" /* ɵɵclassProp */](\"mat-table-fixed-layout\", ctx.fixedLayout);\n            }\n        }, exportAs: [\"matTable\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                //  is only included in the build if used.\n                { provide: collections[\"f\" /* _VIEW_REPEATER_STRATEGY */], useClass: collections[\"d\" /* _DisposeViewRepeaterStrategy */] },\n                { provide: table_CdkTable, useExisting: MatTable },\n                { provide: CDK_TABLE, useExisting: MatTable },\n                { provide: _COALESCED_STYLE_SCHEDULER, useClass: table_CoalescedStyleScheduler },\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], ngContentSelectors: table_c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"lc\" /* ɵɵprojectionDef */](table_c0);\n                core[\"kc\" /* ɵɵprojection */](0);\n                core[\"kc\" /* ɵɵprojection */](1, 1);\n                core[\"Rb\" /* ɵɵelementContainer */](2, 0);\n                core[\"Rb\" /* ɵɵelementContainer */](3, 1);\n                core[\"Rb\" /* ɵɵelementContainer */](4, 2);\n                core[\"Rb\" /* ɵɵelementContainer */](5, 3);\n            }\n        }, directives: [table_HeaderRowOutlet, table_DataRowOutlet, table_NoDataRowOutlet, table_FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\n    return MatTable;\n})();\nconst ɵMatTable_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatTable);\nlet table_MatCellDef = /*@__PURE__*/ (() => {\n    class MatCellDef extends table_CdkCellDef {\n    }\n    MatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\n    MatCellDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkCellDef, useExisting: MatCellDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatCellDef;\n})();\nconst ɵMatCellDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatCellDef);\nlet table_MatHeaderCellDef = /*@__PURE__*/ (() => {\n    class MatHeaderCellDef extends table_CdkHeaderCellDef {\n    }\n    MatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\n    MatHeaderCellDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatHeaderCellDef;\n})();\nconst ɵMatHeaderCellDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatHeaderCellDef);\nlet table_MatFooterCellDef = /*@__PURE__*/ (() => {\n    class MatFooterCellDef extends table_CdkFooterCellDef {\n    }\n    MatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\n    MatFooterCellDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkFooterCellDef, useExisting: MatFooterCellDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatFooterCellDef;\n})();\nconst ɵMatFooterCellDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatFooterCellDef);\nlet table_MatColumnDef = /*@__PURE__*/ (() => {\n    class MatColumnDef extends table_CdkColumnDef {\n        /** Unique name for this column. */\n        get name() { return this._name; }\n        set name(name) { this._setNameInput(name); }\n        /**\n         * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n         * In the future, this will only add \"mat-column-\" and columnCssClassName\n         * will change from type string[] to string.\n         * @docs-private\n         */\n        _updateColumnCssClassName() {\n            super._updateColumnCssClassName();\n            this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n        }\n    }\n    MatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\n    MatColumnDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([\n                { provide: table_CdkColumnDef, useExisting: MatColumnDef },\n                { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n            ]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatColumnDef;\n})();\nconst ɵMatColumnDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatColumnDef);\nlet table_MatHeaderCell = /*@__PURE__*/ (() => {\n    class MatHeaderCell extends table_CdkHeaderCell {\n    }\n    MatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return ɵMatHeaderCell_BaseFactory(t || MatHeaderCell); };\n    MatHeaderCell.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatHeaderCell;\n})();\nconst ɵMatHeaderCell_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatHeaderCell);\nlet table_MatFooterCell = /*@__PURE__*/ (() => {\n    class MatFooterCell extends table_CdkFooterCell {\n    }\n    MatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return ɵMatFooterCell_BaseFactory(t || MatFooterCell); };\n    MatFooterCell.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatFooterCell;\n})();\nconst ɵMatFooterCell_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatFooterCell);\nlet table_MatCell = /*@__PURE__*/ (() => {\n    class MatCell extends table_CdkCell {\n    }\n    MatCell.ɵfac = function MatCell_Factory(t) { return ɵMatCell_BaseFactory(t || MatCell); };\n    MatCell.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatCell;\n})();\nconst ɵMatCell_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatCell);\nlet table_MatHeaderRowDef = /*@__PURE__*/ (() => {\n    class MatHeaderRowDef extends table_CdkHeaderRowDef {\n    }\n    MatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\n    MatHeaderRowDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatHeaderRowDef;\n})();\nconst ɵMatHeaderRowDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatHeaderRowDef);\nlet table_MatFooterRowDef = /*@__PURE__*/ (() => {\n    class MatFooterRowDef extends table_CdkFooterRowDef {\n    }\n    MatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\n    MatFooterRowDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkFooterRowDef, useExisting: MatFooterRowDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatFooterRowDef;\n})();\nconst ɵMatFooterRowDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatFooterRowDef);\nlet table_MatRowDef = /*@__PURE__*/ (() => {\n    class MatRowDef extends table_CdkRowDef {\n    }\n    MatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\n    MatRowDef.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkRowDef, useExisting: MatRowDef }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatRowDef;\n})();\nconst ɵMatRowDef_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatRowDef);\nlet table_MatHeaderRow = /*@__PURE__*/ (() => {\n    class MatHeaderRow extends table_CdkHeaderRow {\n    }\n    MatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\n    MatHeaderRow.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkHeaderRow, useExisting: MatHeaderRow }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Rb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return MatHeaderRow;\n})();\nconst ɵMatHeaderRow_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatHeaderRow);\nlet table_MatFooterRow = /*@__PURE__*/ (() => {\n    class MatFooterRow extends table_CdkFooterRow {\n    }\n    MatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\n    MatFooterRow.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkFooterRow, useExisting: MatFooterRow }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Rb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return MatFooterRow;\n})();\nconst ɵMatFooterRow_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatFooterRow);\nlet table_MatRow = /*@__PURE__*/ (() => {\n    class MatRow extends table_CdkRow {\n    }\n    MatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\n    MatRow.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkRow, useExisting: MatRow }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Rb\" /* ɵɵelementContainer */](0, 0);\n            }\n        }, directives: [table_CdkCellOutlet], encapsulation: 2 });\n    return MatRow;\n})();\nconst ɵMatRow_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatRow);\nlet table_MatNoDataRow = /*@__PURE__*/ (() => {\n    class MatNoDataRow extends table_CdkNoDataRow {\n    }\n    MatNoDataRow.ɵfac = function MatNoDataRow_Factory(t) { return ɵMatNoDataRow_BaseFactory(t || MatNoDataRow); };\n    MatNoDataRow.ɵdir = /*@__PURE__*/ core[\"Kb\" /* ɵɵdefineDirective */]({ type: MatNoDataRow, selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]], features: [/*@__PURE__*/ core[\"Cb\" /* ɵɵProvidersFeature */]([{ provide: table_CdkNoDataRow, useExisting: MatNoDataRow }]), core[\"Ab\" /* ɵɵInheritDefinitionFeature */]] });\n    return MatNoDataRow;\n})();\nconst ɵMatNoDataRow_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatNoDataRow);\nlet table_MatTextColumn = /*@__PURE__*/ (() => {\n    class MatTextColumn extends table_CdkTextColumn {\n    }\n    MatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\n    MatTextColumn.ɵcmp = /*@__PURE__*/ core[\"Jb\" /* ɵɵdefineComponent */]({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [core[\"Ab\" /* ɵɵInheritDefinitionFeature */]], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Tb\" /* ɵɵelementContainerStart */](0, 0);\n                core[\"Hc\" /* ɵɵtemplate */](1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n                core[\"Hc\" /* ɵɵtemplate */](2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n                core[\"Sb\" /* ɵɵelementContainerEnd */]();\n            }\n        }, directives: [table_MatColumnDef, table_MatHeaderCellDef, table_MatCellDef, table_MatHeaderCell, table_MatCell], encapsulation: 2 });\n    return MatTextColumn;\n})();\nconst ɵMatTextColumn_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ core[\"Xb\" /* ɵɵgetInheritedFactory */](table_MatTextColumn);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst table_EXPORTED_DECLARATIONS = [\n    // Table\n    table_MatTable,\n    // Template defs\n    table_MatHeaderCellDef,\n    table_MatHeaderRowDef,\n    table_MatColumnDef,\n    table_MatCellDef,\n    table_MatRowDef,\n    table_MatFooterCellDef,\n    table_MatFooterRowDef,\n    // Cell directives\n    table_MatHeaderCell,\n    table_MatCell,\n    table_MatFooterCell,\n    // Row directives\n    table_MatHeaderRow,\n    table_MatRow,\n    table_MatFooterRow,\n    table_MatNoDataRow,\n    table_MatTextColumn,\n];\nlet table_MatTableModule = /*@__PURE__*/ (() => {\n    class MatTableModule {\n    }\n    MatTableModule.ɵfac = function MatTableModule_Factory(t) { return new (t || MatTableModule)(); };\n    MatTableModule.ɵmod = /*@__PURE__*/ core[\"Nb\" /* ɵɵdefineNgModule */]({ type: MatTableModule });\n    MatTableModule.ɵinj = /*@__PURE__*/ core[\"Mb\" /* ɵɵdefineInjector */]({ imports: [[\n                table_CdkTableModule,\n                fesm2015_core[\"i\" /* MatCommonModule */],\n            ], fesm2015_core[\"i\" /* MatCommonModule */]] });\n    return MatTableModule;\n})();\n/*@__PURE__*/ (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Cc\" /* ɵɵsetNgModuleScope */](table_MatTableModule, { declarations: function () { return [table_MatTable, table_MatHeaderCellDef, table_MatHeaderRowDef, table_MatColumnDef, table_MatCellDef, table_MatRowDef, table_MatFooterCellDef, table_MatFooterRowDef, table_MatHeaderCell, table_MatCell, table_MatFooterCell, table_MatHeaderRow, table_MatRow, table_MatFooterRow, table_MatNoDataRow, table_MatTextColumn]; }, imports: function () {\n            return [table_CdkTableModule,\n                fesm2015_core[\"i\" /* MatCommonModule */]];\n        }, exports: function () { return [fesm2015_core[\"i\" /* MatCommonModule */], table_MatTable, table_MatHeaderCellDef, table_MatHeaderRowDef, table_MatColumnDef, table_MatCellDef, table_MatRowDef, table_MatFooterCellDef, table_MatFooterRowDef, table_MatHeaderCell, table_MatCell, table_MatFooterCell, table_MatHeaderRow, table_MatRow, table_MatFooterRow, table_MatNoDataRow, table_MatTextColumn]; } });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass table_MatTableDataSource extends collections[\"b\" /* DataSource */] {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject[\"a\" /* BehaviorSubject */]([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject[\"a\" /* BehaviorSubject */]('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject[\"a\" /* Subject */]();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (Object(coercion[\"a\" /* _isNumberValue */])(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject[\"a\" /* BehaviorSubject */](initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() { return this._data.value; }\n    set data(data) {\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() { return this._filter.value; }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() { return this._sort; }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() { return this._paginator; }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort ?\n            Object(merge[\"a\" /* merge */])(this._sort.sortChange, this._sort.initialized) :\n            Object(of[\"a\" /* of */])(null);\n        const pageChange = this._paginator ?\n            Object(merge[\"a\" /* merge */])(this._paginator.page, this._internalPageChanges, this._paginator.initialized) :\n            Object(of[\"a\" /* of */])(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = Object(combineLatest[\"a\" /* combineLatest */])([dataStream, this._filter])\n            .pipe(Object(map[\"a\" /* map */])(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = Object(combineLatest[\"a\" /* combineLatest */])([filteredData, sortChange])\n            .pipe(Object(map[\"a\" /* map */])(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = Object(combineLatest[\"a\" /* combineLatest */])([orderedData, pageChange])\n            .pipe(Object(map[\"a\" /* map */])(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData = (this.filter == null || this.filter === '') ? data :\n            data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends table_MatTableDataSource {\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=table.js.map\n\n\n/***/ }),\n\n/***/ \"Dh3D\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MAT_SORT_DEFAULT_OPTIONS */\n/* unused harmony export MAT_SORT_HEADER_INTL_PROVIDER */\n/* unused harmony export MAT_SORT_HEADER_INTL_PROVIDER_FACTORY */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MatSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MatSortHeader; });\n/* unused harmony export MatSortHeaderIntl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return MatSortModule; });\n/* unused harmony export matSortAnimations */\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"8LU1\");\n/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"FKr1\");\n/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"FtGj\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"XNiG\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"VRyK\");\n/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"R0Ic\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"ofXK\");\n/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"u47x\");\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\n\n\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵgetCurrentView */ \"Wb\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](0, \"div\", 3);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵrestoreView */ \"yc\"](_r2); const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵnextContext */ \"gc\"](); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵrestoreView */ \"yc\"](_r2); const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵnextContext */ \"gc\"](); return ctx_r3._disableViewStateAnimation = false; });\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelement */ \"Qb\"](1, \"div\", 4);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](2, \"div\", 5);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelement */ \"Qb\"](3, \"div\", 6);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelement */ \"Qb\"](4, \"div\", 7);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelement */ \"Qb\"](5, \"div\", 8);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵnextContext */ \"gc\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵproperty */ \"mc\"](\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵadvance */ \"Db\"](2);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵproperty */ \"mc\"](\"@indicator\", ctx_r0._getArrowDirectionState());\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵadvance */ \"Db\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵproperty */ \"mc\"](\"@leftPointer\", ctx_r0._getArrowDirectionState());\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵadvance */ \"Db\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵproperty */ \"mc\"](\"@rightPointer\", ctx_r0._getArrowDirectionState());\n    }\n}\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* InjectionToken */ \"s\"]('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {\n}\nconst _MatSortMixinBase = /*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* mixinInitialized */ \"y\"])(/*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* mixinDisabled */ \"w\"])(MatSortBase));\nlet MatSort = /*@__PURE__*/ (() => {\n    class MatSort extends _MatSortMixinBase {\n        constructor(_defaultOptions) {\n            super();\n            this._defaultOptions = _defaultOptions;\n            /** Collection of all registered sortables that this directive manages. */\n            this.sortables = new Map();\n            /** Used to notify any child components listening to state changes. */\n            this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_4__[/* Subject */ \"a\"]();\n            /**\n             * The direction to set when an MatSortable is initially sorted.\n             * May be overriden by the MatSortable's sort start.\n             */\n            this.start = 'asc';\n            this._direction = '';\n            /** Event emitted when the user changes either the active sort or sort direction. */\n            this.sortChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* EventEmitter */ \"o\"]();\n        }\n        /** The sort direction of the currently active MatSortable. */\n        get direction() { return this._direction; }\n        set direction(direction) {\n            if (direction && direction !== 'asc' && direction !== 'desc' &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getSortInvalidDirectionError(direction);\n            }\n            this._direction = direction;\n        }\n        /**\n         * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n         * May be overriden by the MatSortable's disable clear input.\n         */\n        get disableClear() { return this._disableClear; }\n        set disableClear(v) { this._disableClear = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__[/* coerceBooleanProperty */ \"c\"])(v); }\n        /**\n         * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n         * collection of MatSortables.\n         */\n        register(sortable) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!sortable.id) {\n                    throw getSortHeaderMissingIdError();\n                }\n                if (this.sortables.has(sortable.id)) {\n                    throw getSortDuplicateSortableIdError(sortable.id);\n                }\n            }\n            this.sortables.set(sortable.id, sortable);\n        }\n        /**\n         * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n         * collection of contained MatSortables.\n         */\n        deregister(sortable) {\n            this.sortables.delete(sortable.id);\n        }\n        /** Sets the active sort id and determines the new sort direction. */\n        sort(sortable) {\n            if (this.active != sortable.id) {\n                this.active = sortable.id;\n                this.direction = sortable.start ? sortable.start : this.start;\n            }\n            else {\n                this.direction = this.getNextSortDirection(sortable);\n            }\n            this.sortChange.emit({ active: this.active, direction: this.direction });\n        }\n        /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n        getNextSortDirection(sortable) {\n            var _a, _b, _c;\n            if (!sortable) {\n                return '';\n            }\n            // Get the sort direction cycle with the potential sortable overrides.\n            const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n            let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n            // Get and return the next direction in the cycle\n            let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n            if (nextDirectionIndex >= sortDirectionCycle.length) {\n                nextDirectionIndex = 0;\n            }\n            return sortDirectionCycle[nextDirectionIndex];\n        }\n        ngOnInit() {\n            this._markInitialized();\n        }\n        ngOnChanges() {\n            this._stateChanges.next();\n        }\n        ngOnDestroy() {\n            this._stateChanges.complete();\n        }\n    }\n    MatSort.ɵfac = function MatSort_Factory(t) { return new (t || MatSort)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](MAT_SORT_DEFAULT_OPTIONS, 8)); };\n    MatSort.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Kb\"]({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"Ab\"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵNgOnChangesFeature */ \"Bb\"]] });\n    return MatSort;\n})();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = _angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* AnimationDurations */ \"b\"].ENTERING + ' ' +\n    _angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* AnimationCurves */ \"a\"].STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* trigger */ \"o\"])('indicator', [\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('active-asc, asc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('active-desc, desc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(10px)' })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('active-asc <=> active-desc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* trigger */ \"o\"])('leftPointer', [\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('active-asc, asc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'rotate(-45deg)' })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('active-desc, desc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'rotate(45deg)' })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('active-asc <=> active-desc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* trigger */ \"o\"])('rightPointer', [\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('active-asc, asc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'rotate(45deg)' })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('active-desc, desc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'rotate(-45deg)' })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('active-asc <=> active-desc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])(SORT_ANIMATION_TRANSITION))\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* trigger */ \"o\"])('arrowOpacity', [\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('desc-to-active, asc-to-active, active', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ opacity: 1 })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('desc-to-hint, asc-to-hint, hint', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ opacity: .54 })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('* => asc, * => desc, * => active, * => hint, * => void', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])('0ms')),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('* <=> *', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* trigger */ \"o\"])('arrowPosition', [\n        // Hidden Above => Hint Center\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('* => desc-to-hint, * => desc-to-active', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])(SORT_ANIMATION_TRANSITION, /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* keyframes */ \"i\"])([\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(-25%)' }),\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('* => hint-to-desc, * => active-to-desc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])(SORT_ANIMATION_TRANSITION, /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* keyframes */ \"i\"])([\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(0)' }),\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('* => asc-to-hint, * => asc-to-active', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])(SORT_ANIMATION_TRANSITION, /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* keyframes */ \"i\"])([\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(25%)' }),\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('* => hint-to-asc, * => active-to-asc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animate */ \"e\"])(SORT_ANIMATION_TRANSITION, /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* keyframes */ \"i\"])([\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(0)' }),\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(-25%)' })\n        ]))),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(0)' })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('hint-to-desc, active-to-desc, desc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(-25%)' })),\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* state */ \"l\"])('hint-to-asc, active-to-asc, asc', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* style */ \"m\"])({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* trigger */ \"o\"])('allowChildren', [\n        /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* transition */ \"n\"])('* <=> *', [\n            /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* query */ \"j\"])('@*', /*@__PURE__*/ Object(_angular_animations__WEBPACK_IMPORTED_MODULE_6__[/* animateChild */ \"f\"])(), { optional: true })\n        ])\n    ]),\n};\nlet MatSortHeaderIntl = /*@__PURE__*/ (() => {\n    class MatSortHeaderIntl {\n        constructor() {\n            /**\n             * Stream that emits whenever the labels here are changed. Use this to notify\n             * components if the labels have changed after initialization.\n             */\n            this.changes = new rxjs__WEBPACK_IMPORTED_MODULE_4__[/* Subject */ \"a\"]();\n            /**\n             * ARIA label for the sorting button.\n             * @deprecated Not used anymore. To be removed.\n             * @breaking-change 8.0.0\n             */\n            this.sortButtonLabel = (id) => {\n                return `Change sorting for ${id}`;\n            };\n        }\n    }\n    MatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n    MatSortHeaderIntl.ɵprov = /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjectable */ \"Lb\"])({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n    return MatSortHeaderIntl;\n})();\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[/*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Optional */ \"C\"](), /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* SkipSelf */ \"L\"](), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {\n}\nconst _MatSortHeaderMixinBase = /*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* mixinDisabled */ \"w\"])(MatSortHeaderBase);\nlet MatSortHeader = /*@__PURE__*/ (() => {\n    class MatSortHeader extends _MatSortHeaderMixinBase {\n        constructor(_intl, _changeDetectorRef, \n        // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n        // tslint:disable-next-line: lightweight-tokens\n        _sort, _columnDef, _focusMonitor, _elementRef) {\n            // Note that we use a string token for the `_columnDef`, because the value is provided both by\n            // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n            // and we want to avoid having the sort header depending on the CDK table because\n            // of this single reference.\n            super();\n            this._intl = _intl;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._sort = _sort;\n            this._columnDef = _columnDef;\n            this._focusMonitor = _focusMonitor;\n            this._elementRef = _elementRef;\n            /**\n             * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n             * provide an affordance that the header is sortable by showing on focus and hover.\n             */\n            this._showIndicatorHint = false;\n            /**\n             * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n             * position through the animation. If animations are currently disabled, the fromState is removed\n             * so that there is no animation displayed.\n             */\n            this._viewState = {};\n            /** The direction the arrow should be facing according to the current state. */\n            this._arrowDirection = '';\n            /**\n             * Whether the view state animation should show the transition between the `from` and `to` states.\n             */\n            this._disableViewStateAnimation = false;\n            /** Sets the position of the arrow that displays when sorted. */\n            this.arrowPosition = 'after';\n            if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getSortHeaderNotContainedWithinSortError();\n            }\n            this._handleStateChanges();\n        }\n        /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n        get disableClear() { return this._disableClear; }\n        set disableClear(v) { this._disableClear = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__[/* coerceBooleanProperty */ \"c\"])(v); }\n        ngOnInit() {\n            if (!this.id && this._columnDef) {\n                this.id = this._columnDef.name;\n            }\n            // Initialize the direction of the arrow and set the view state to be immediately that state.\n            this._updateArrowDirection();\n            this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n            this._sort.register(this);\n        }\n        ngAfterViewInit() {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n                const newState = !!origin;\n                if (newState !== this._showIndicatorHint) {\n                    this._setIndicatorHintVisible(newState);\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n        }\n        ngOnDestroy() {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n            this._sort.deregister(this);\n            this._rerenderSubscription.unsubscribe();\n        }\n        /**\n         * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n         * user showing what the active sort will become. If set to false, the arrow will fade away.\n         */\n        _setIndicatorHintVisible(visible) {\n            // No-op if the sort header is disabled - should not make the hint visible.\n            if (this._isDisabled() && visible) {\n                return;\n            }\n            this._showIndicatorHint = visible;\n            if (!this._isSorted()) {\n                this._updateArrowDirection();\n                if (this._showIndicatorHint) {\n                    this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n                }\n                else {\n                    this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n                }\n            }\n        }\n        /**\n         * Sets the animation transition view state for the arrow's position and opacity. If the\n         * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n         * no animation appears.\n         */\n        _setAnimationTransitionState(viewState) {\n            this._viewState = viewState || {};\n            // If the animation for arrow position state (opacity/translation) should be disabled,\n            // remove the fromState so that it jumps right to the toState.\n            if (this._disableViewStateAnimation) {\n                this._viewState = { toState: viewState.toState };\n            }\n        }\n        /** Triggers the sort on this sort header and removes the indicator hint. */\n        _toggleOnInteraction() {\n            this._sort.sort(this);\n            // Do not show the animation if the header was already shown in the right position.\n            if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = true;\n            }\n        }\n        _handleClick() {\n            if (!this._isDisabled()) {\n                this._sort.sort(this);\n            }\n        }\n        _handleKeydown(event) {\n            if (!this._isDisabled() && (event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[/* SPACE */ \"m\"] || event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_3__[/* ENTER */ \"e\"])) {\n                event.preventDefault();\n                this._toggleOnInteraction();\n            }\n        }\n        /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n        _isSorted() {\n            return this._sort.active == this.id &&\n                (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n        }\n        /** Returns the animation state for the arrow direction (indicator and pointers). */\n        _getArrowDirectionState() {\n            return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n        }\n        /** Returns the arrow position state (opacity, translation). */\n        _getArrowViewState() {\n            const fromState = this._viewState.fromState;\n            return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n        }\n        /**\n         * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n         * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n         * active sorted direction. The reason this is updated through a function is because the direction\n         * should only be changed at specific times - when deactivated but the hint is displayed and when\n         * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n         * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n         * preserving its direction, even though the next sort direction is actually different and should\n         * only be changed once the arrow displays again (hint or activation).\n         */\n        _updateArrowDirection() {\n            this._arrowDirection = this._isSorted() ?\n                this._sort.direction :\n                (this.start || this._sort.start);\n        }\n        _isDisabled() {\n            return this._sort.disabled || this.disabled;\n        }\n        /**\n         * Gets the aria-sort attribute that should be applied to this sort header. If this header\n         * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n         * says that the aria-sort property should only be present on one header at a time, so removing\n         * ensures this is true.\n         */\n        _getAriaSortAttribute() {\n            if (!this._isSorted()) {\n                return 'none';\n            }\n            return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n        }\n        /** Whether the arrow inside the sort header should be rendered. */\n        _renderArrow() {\n            return !this._isDisabled() || this._isSorted();\n        }\n        /** Handles changes in the sorting state. */\n        _handleStateChanges() {\n            this._rerenderSubscription =\n                Object(rxjs__WEBPACK_IMPORTED_MODULE_5__[/* merge */ \"a\"])(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n                    if (this._isSorted()) {\n                        this._updateArrowDirection();\n                        // Do not show the animation if the header was already shown in the right position.\n                        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                            this._disableViewStateAnimation = true;\n                        }\n                        this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                        this._showIndicatorHint = false;\n                    }\n                    // If this header was recently active and now no longer sorted, animate away the arrow.\n                    if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                        this._disableViewStateAnimation = false;\n                        this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n                    }\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n    }\n    MatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](MatSortHeaderIntl), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ChangeDetectorRef */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](MatSort, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"]('MAT_SORT_HEADER_COLUMN_DEF', 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__[/* FocusMonitor */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"l\"])); };\n    MatSortHeader.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineComponent */ \"Jb\"]({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵattribute */ \"Eb\"](\"aria-sort\", ctx._getAriaSortAttribute());\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵclassProp */ \"Hb\"](\"mat-sort-header-disabled\", ctx._isDisabled());\n            }\n        }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"Ab\"]], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 6, consts: [[\"role\", \"button\", 1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵprojectionDef */ \"lc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](0, \"div\", 0);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](1, \"div\", 1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵprojection */ \"kc\"](2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵtemplate */ \"Hc\"](3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵclassProp */ \"Hb\"](\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵattribute */ \"Eb\"](\"tabindex\", ctx._isDisabled() ? null : 0);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵadvance */ \"Db\"](3);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵproperty */ \"mc\"](\"ngIf\", ctx._renderArrow());\n            }\n        }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_7__[/* NgIf */ \"o\"]], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n                matSortAnimations.indicator,\n                matSortAnimations.leftPointer,\n                matSortAnimations.rightPointer,\n                matSortAnimations.arrowOpacity,\n                matSortAnimations.arrowPosition,\n                matSortAnimations.allowChildren,\n            ] }, changeDetection: 0 });\n    return MatSortHeader;\n})();\nlet MatSortModule = /*@__PURE__*/ (() => {\n    class MatSortModule {\n    }\n    MatSortModule.ɵfac = function MatSortModule_Factory(t) { return new (t || MatSortModule)(); };\n    MatSortModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineNgModule */ \"Nb\"]({ type: MatSortModule });\n    MatSortModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjector */ \"Mb\"]({ providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_7__[/* CommonModule */ \"c\"], _angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* MatCommonModule */ \"i\"]]] });\n    return MatSortModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵsetNgModuleScope */ \"Cc\"](MatSortModule, { declarations: function () { return [MatSort, MatSortHeader]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_7__[/* CommonModule */ \"c\"], _angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* MatCommonModule */ \"i\"]]; }, exports: function () { return [MatSort, MatSortHeader]; } }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=sort.js.map\n\n\n/***/ }),\n\n/***/ \"M9IT\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MAT_PAGINATOR_DEFAULT_OPTIONS */\n/* unused harmony export MAT_PAGINATOR_INTL_PROVIDER */\n/* unused harmony export MAT_PAGINATOR_INTL_PROVIDER_FACTORY */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MatPaginator; });\n/* unused harmony export MatPaginatorIntl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MatPaginatorModule; });\n/* unused harmony export PageEvent */\n/* unused harmony export _MatPaginatorBase */\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"ofXK\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"FKr1\");\n/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"bTqV\");\n/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"d3UM\");\n/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"Qu3c\");\n/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"8LU1\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"XNiG\");\n/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"kmnG\");\n\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\n\n\n\n\n\n\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](0, \"mat-option\", 19);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtext */ \"Jc\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n    }\n    if (rf & 2) {\n        const pageSizeOption_r6 = ctx.$implicit;\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"value\", pageSizeOption_r6);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtextInterpolate1 */ \"Lc\"](\" \", pageSizeOption_r6, \" \");\n    }\n}\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵgetCurrentView */ \"Wb\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](0, \"mat-form-field\", 16);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](1, \"mat-select\", 17);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵlistener */ \"cc\"](\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵrestoreView */ \"yc\"](_r8); const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnextContext */ \"gc\"](2); return ctx_r7._changePageSize($event.value); });\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtemplate */ \"Hc\"](2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnextContext */ \"gc\"](2);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"appearance\", ctx_r3._formFieldAppearance)(\"color\", ctx_r3.color);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n    }\n}\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](0, \"div\", 20);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtext */ \"Jc\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnextContext */ \"gc\"](2);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtextInterpolate */ \"Kc\"](ctx_r4.pageSize);\n    }\n}\nfunction MatPaginator_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](0, \"div\", 12);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](1, \"div\", 13);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtext */ \"Jc\"](2);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtemplate */ \"Hc\"](3, MatPaginator_div_2_mat_form_field_3_Template, 3, 6, \"mat-form-field\", 14);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtemplate */ \"Hc\"](4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnextContext */ \"gc\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](2);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtextInterpolate1 */ \"Lc\"](\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](1);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n    }\n}\nfunction MatPaginator_button_6_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵgetCurrentView */ \"Wb\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](0, \"button\", 21);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵlistener */ \"cc\"](\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵrestoreView */ \"yc\"](_r10); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnextContext */ \"gc\"](); return ctx_r9.firstPage(); });\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceSVG */ \"fc\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](1, \"svg\", 7);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelement */ \"Qb\"](2, \"path\", 22);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnextContext */ \"gc\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵattribute */ \"Eb\"](\"aria-label\", ctx_r1._intl.firstPageLabel);\n    }\n}\nfunction MatPaginator_button_13_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵgetCurrentView */ \"Wb\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceSVG */ \"fc\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceHTML */ \"ec\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](0, \"button\", 23);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵlistener */ \"cc\"](\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵrestoreView */ \"yc\"](_r12); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnextContext */ \"gc\"](); return ctx_r11.lastPage(); });\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceSVG */ \"fc\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](1, \"svg\", 7);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelement */ \"Qb\"](2, \"path\", 24);\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n    }\n    if (rf & 2) {\n        const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnextContext */ \"gc\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵattribute */ \"Eb\"](\"aria-label\", ctx_r2._intl.lastPageLabel);\n    }\n}\nlet MatPaginatorIntl = /*@__PURE__*/ (() => {\n    class MatPaginatorIntl {\n        constructor() {\n            /**\n             * Stream to emit from when labels are changed. Use this to notify components when the labels have\n             * changed after initialization.\n             */\n            this.changes = new rxjs__WEBPACK_IMPORTED_MODULE_7__[/* Subject */ \"a\"]();\n            /** A label for the page size selector. */\n            this.itemsPerPageLabel = 'Items per page:';\n            /** A label for the button that increments the current page. */\n            this.nextPageLabel = 'Next page';\n            /** A label for the button that decrements the current page. */\n            this.previousPageLabel = 'Previous page';\n            /** A label for the button that moves to the first page. */\n            this.firstPageLabel = 'First page';\n            /** A label for the button that moves to the last page. */\n            this.lastPageLabel = 'Last page';\n            /** A label for the range of items within the current page and the length of the whole list. */\n            this.getRangeLabel = (page, pageSize, length) => {\n                if (length == 0 || pageSize == 0) {\n                    return `0 of ${length}`;\n                }\n                length = Math.max(length, 0);\n                const startIndex = page * pageSize;\n                // If the start index exceeds the list length, do not try and fix the end index to the end.\n                const endIndex = startIndex < length ?\n                    Math.min(startIndex + pageSize, length) :\n                    startIndex + pageSize;\n                return `${startIndex + 1} – ${endIndex} of ${length}`;\n            };\n        }\n    }\n    MatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n    MatPaginatorIntl.ɵprov = /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjectable */ \"Lb\"])({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n    return MatPaginatorIntl;\n})();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[/*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* Optional */ \"C\"](), /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* SkipSelf */ \"L\"](), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* InjectionToken */ \"s\"]('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nclass MatPaginatorMixinBase {\n}\nconst _MatPaginatorMixinBase = /*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* mixinDisabled */ \"w\"])(/*@__PURE__*/ Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* mixinInitialized */ \"y\"])(MatPaginatorMixinBase));\nlet _MatPaginatorBase = /*@__PURE__*/ (() => {\n    class _MatPaginatorBase extends _MatPaginatorMixinBase {\n        constructor(_intl, _changeDetectorRef, defaults) {\n            super();\n            this._intl = _intl;\n            this._changeDetectorRef = _changeDetectorRef;\n            this._pageIndex = 0;\n            this._length = 0;\n            this._pageSizeOptions = [];\n            this._hidePageSize = false;\n            this._showFirstLastButtons = false;\n            /** Event emitted when the paginator changes the page size or page index. */\n            this.page = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"o\"]();\n            this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n            if (defaults) {\n                const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons, } = defaults;\n                if (pageSize != null) {\n                    this._pageSize = pageSize;\n                }\n                if (pageSizeOptions != null) {\n                    this._pageSizeOptions = pageSizeOptions;\n                }\n                if (hidePageSize != null) {\n                    this._hidePageSize = hidePageSize;\n                }\n                if (showFirstLastButtons != null) {\n                    this._showFirstLastButtons = showFirstLastButtons;\n                }\n            }\n        }\n        /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n        get pageIndex() { return this._pageIndex; }\n        set pageIndex(value) {\n            this._pageIndex = Math.max(Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[/* coerceNumberProperty */ \"f\"])(value), 0);\n            this._changeDetectorRef.markForCheck();\n        }\n        /** The length of the total number of items that are being paginated. Defaulted to 0. */\n        get length() { return this._length; }\n        set length(value) {\n            this._length = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[/* coerceNumberProperty */ \"f\"])(value);\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Number of items to display on a page. By default set to 50. */\n        get pageSize() { return this._pageSize; }\n        set pageSize(value) {\n            this._pageSize = Math.max(Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[/* coerceNumberProperty */ \"f\"])(value), 0);\n            this._updateDisplayedPageSizeOptions();\n        }\n        /** The set of provided page size options to display to the user. */\n        get pageSizeOptions() { return this._pageSizeOptions; }\n        set pageSizeOptions(value) {\n            this._pageSizeOptions = (value || []).map(p => Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[/* coerceNumberProperty */ \"f\"])(p));\n            this._updateDisplayedPageSizeOptions();\n        }\n        /** Whether to hide the page size selection UI from the user. */\n        get hidePageSize() { return this._hidePageSize; }\n        set hidePageSize(value) {\n            this._hidePageSize = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[/* coerceBooleanProperty */ \"c\"])(value);\n        }\n        /** Whether to show the first/last buttons UI to the user. */\n        get showFirstLastButtons() { return this._showFirstLastButtons; }\n        set showFirstLastButtons(value) {\n            this._showFirstLastButtons = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__[/* coerceBooleanProperty */ \"c\"])(value);\n        }\n        ngOnInit() {\n            this._initialized = true;\n            this._updateDisplayedPageSizeOptions();\n            this._markInitialized();\n        }\n        ngOnDestroy() {\n            this._intlChanges.unsubscribe();\n        }\n        /** Advances to the next page if it exists. */\n        nextPage() {\n            if (!this.hasNextPage()) {\n                return;\n            }\n            const previousPageIndex = this.pageIndex;\n            this.pageIndex++;\n            this._emitPageEvent(previousPageIndex);\n        }\n        /** Move back to the previous page if it exists. */\n        previousPage() {\n            if (!this.hasPreviousPage()) {\n                return;\n            }\n            const previousPageIndex = this.pageIndex;\n            this.pageIndex--;\n            this._emitPageEvent(previousPageIndex);\n        }\n        /** Move to the first page if not already there. */\n        firstPage() {\n            // hasPreviousPage being false implies at the start\n            if (!this.hasPreviousPage()) {\n                return;\n            }\n            const previousPageIndex = this.pageIndex;\n            this.pageIndex = 0;\n            this._emitPageEvent(previousPageIndex);\n        }\n        /** Move to the last page if not already there. */\n        lastPage() {\n            // hasNextPage being false implies at the end\n            if (!this.hasNextPage()) {\n                return;\n            }\n            const previousPageIndex = this.pageIndex;\n            this.pageIndex = this.getNumberOfPages() - 1;\n            this._emitPageEvent(previousPageIndex);\n        }\n        /** Whether there is a previous page. */\n        hasPreviousPage() {\n            return this.pageIndex >= 1 && this.pageSize != 0;\n        }\n        /** Whether there is a next page. */\n        hasNextPage() {\n            const maxPageIndex = this.getNumberOfPages() - 1;\n            return this.pageIndex < maxPageIndex && this.pageSize != 0;\n        }\n        /** Calculate the number of pages */\n        getNumberOfPages() {\n            if (!this.pageSize) {\n                return 0;\n            }\n            return Math.ceil(this.length / this.pageSize);\n        }\n        /**\n         * Changes the page size so that the first item displayed on the page will still be\n         * displayed using the new page size.\n         *\n         * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n         * switching so that the page size is 5 will set the third page as the current page so\n         * that the 10th item will still be displayed.\n         */\n        _changePageSize(pageSize) {\n            // Current page needs to be updated to reflect the new page size. Navigate to the page\n            // containing the previous page's first item.\n            const startIndex = this.pageIndex * this.pageSize;\n            const previousPageIndex = this.pageIndex;\n            this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n            this.pageSize = pageSize;\n            this._emitPageEvent(previousPageIndex);\n        }\n        /** Checks whether the buttons for going forwards should be disabled. */\n        _nextButtonsDisabled() {\n            return this.disabled || !this.hasNextPage();\n        }\n        /** Checks whether the buttons for going backwards should be disabled. */\n        _previousButtonsDisabled() {\n            return this.disabled || !this.hasPreviousPage();\n        }\n        /**\n         * Updates the list of page size options to display to the user. Includes making sure that\n         * the page size is an option and that the list is sorted.\n         */\n        _updateDisplayedPageSizeOptions() {\n            if (!this._initialized) {\n                return;\n            }\n            // If no page size is provided, use the first page size option or the default page size.\n            if (!this.pageSize) {\n                this._pageSize = this.pageSizeOptions.length != 0 ?\n                    this.pageSizeOptions[0] :\n                    DEFAULT_PAGE_SIZE;\n            }\n            this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n            if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n                this._displayedPageSizeOptions.push(this.pageSize);\n            }\n            // Sort the numbers using a number-specific sort function.\n            this._displayedPageSizeOptions.sort((a, b) => a - b);\n            this._changeDetectorRef.markForCheck();\n        }\n        /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n        _emitPageEvent(previousPageIndex) {\n            this.page.emit({\n                previousPageIndex,\n                pageIndex: this.pageIndex,\n                pageSize: this.pageSize,\n                length: this.length\n            });\n        }\n    }\n    _MatPaginatorBase.ɵfac = function _MatPaginatorBase_Factory(t) { return new (t || _MatPaginatorBase)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](MatPaginatorIntl), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ChangeDetectorRef */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](undefined)); };\n    _MatPaginatorBase.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineDirective */ \"Kb\"]({ type: _MatPaginatorBase, inputs: { pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵInheritDefinitionFeature */ \"Ab\"]] });\n    return _MatPaginatorBase;\n})();\nlet MatPaginator = /*@__PURE__*/ (() => {\n    class MatPaginator extends _MatPaginatorBase {\n        constructor(intl, changeDetectorRef, defaults) {\n            super(intl, changeDetectorRef, defaults);\n            if (defaults && defaults.formFieldAppearance != null) {\n                this._formFieldAppearance = defaults.formFieldAppearance;\n            }\n        }\n    }\n    MatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](MatPaginatorIntl), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ChangeDetectorRef */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Pb\"](MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\n    MatPaginator.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineComponent */ \"Jb\"]({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-paginator\"], inputs: { disabled: \"disabled\" }, exportAs: [\"matPaginator\"], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵInheritDefinitionFeature */ \"Ab\"]], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"appearance\", \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](0, \"div\", 0);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](1, \"div\", 1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtemplate */ \"Hc\"](2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](3, \"div\", 3);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](4, \"div\", 4);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtext */ \"Jc\"](5);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtemplate */ \"Hc\"](6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](7, \"button\", 6);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵlistener */ \"cc\"](\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceSVG */ \"fc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](8, \"svg\", 7);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelement */ \"Qb\"](9, \"path\", 8);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceHTML */ \"ec\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](10, \"button\", 9);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵlistener */ \"cc\"](\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵnamespaceSVG */ \"fc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementStart */ \"Vb\"](11, \"svg\", 7);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelement */ \"Qb\"](12, \"path\", 10);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtemplate */ \"Hc\"](13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementEnd */ \"Ub\"]();\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"ngIf\", !ctx.hidePageSize);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](3);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtextInterpolate1 */ \"Lc\"](\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"ngIf\", ctx.showFirstLastButtons);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵattribute */ \"Eb\"](\"aria-label\", ctx._intl.previousPageLabel);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](3);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵattribute */ \"Eb\"](\"aria-label\", ctx._intl.nextPageLabel);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵadvance */ \"Db\"](3);\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"mc\"](\"ngIf\", ctx.showFirstLastButtons);\n            }\n        }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_0__[/* NgIf */ \"o\"], _angular_material_button__WEBPACK_IMPORTED_MODULE_3__[/* MatButton */ \"a\"], _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_5__[/* MatTooltip */ \"a\"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_8__[/* MatFormField */ \"c\"], _angular_material_select__WEBPACK_IMPORTED_MODULE_4__[/* MatSelect */ \"a\"], _angular_common__WEBPACK_IMPORTED_MODULE_0__[/* NgForOf */ \"n\"], _angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* MatOption */ \"m\"]], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n    return MatPaginator;\n})();\nlet MatPaginatorModule = /*@__PURE__*/ (() => {\n    class MatPaginatorModule {\n    }\n    MatPaginatorModule.ɵfac = function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); };\n    MatPaginatorModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineNgModule */ \"Nb\"]({ type: MatPaginatorModule });\n    MatPaginatorModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjector */ \"Mb\"]({ providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n                _angular_common__WEBPACK_IMPORTED_MODULE_0__[/* CommonModule */ \"c\"],\n                _angular_material_button__WEBPACK_IMPORTED_MODULE_3__[/* MatButtonModule */ \"b\"],\n                _angular_material_select__WEBPACK_IMPORTED_MODULE_4__[/* MatSelectModule */ \"b\"],\n                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_5__[/* MatTooltipModule */ \"b\"],\n                _angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* MatCommonModule */ \"i\"],\n            ]] });\n    return MatPaginatorModule;\n})();\n/*@__PURE__*/ (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵsetNgModuleScope */ \"Cc\"](MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () {\n            return [_angular_common__WEBPACK_IMPORTED_MODULE_0__[/* CommonModule */ \"c\"],\n                _angular_material_button__WEBPACK_IMPORTED_MODULE_3__[/* MatButtonModule */ \"b\"],\n                _angular_material_select__WEBPACK_IMPORTED_MODULE_4__[/* MatSelectModule */ \"b\"],\n                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_5__[/* MatTooltipModule */ \"b\"],\n                _angular_material_core__WEBPACK_IMPORTED_MODULE_2__[/* MatCommonModule */ \"i\"]];\n        }, exports: function () { return [MatPaginator]; } });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=paginator.js.map\n\n\n/***/ }),\n\n/***/ \"rqBn\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LayoutComponent; });\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"0MNC\");\n/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"tyNb\");\n/* harmony import */ var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"/t3+\");\n/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"bTqV\");\n/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"NFeN\");\n/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"XhcP\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"ofXK\");\n/* harmony import */ var ng_material_multilevel_menu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"CsTR\");\n\n\n\n\n\n\n\n\n\nconst _c0 = [\"sidenav\"];\nfunction LayoutComponent_ng_material_multilevel_menu_21_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵgetCurrentView */ \"Wb\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](0, \"ng-material-multilevel-menu\", 12);\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"selectedItem\", function LayoutComponent_ng_material_multilevel_menu_21_Template_ng_material_multilevel_menu_selectedItem_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵrestoreView */ \"yc\"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵnextContext */ \"gc\"](); return ctx_r2.selectedItem($event); });\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵnextContext */ \"gc\"]();\n        _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵproperty */ \"mc\"](\"configuration\", ctx_r1.config)(\"items\", ctx_r1.appitems);\n    }\n}\nconst _c1 = [\"*\"];\nlet LayoutComponent = /*@__PURE__*/ (() => {\n    class LayoutComponent {\n        constructor(changeDetectorRef, media, router) {\n            this.router = router;\n            this.config = {\n                paddingAtStart: true,\n                fontColor: 'white',\n                // selectedListFontColor: '#fee24f',\n                selectedListFontColor: 'white',\n            };\n            this.appitems = [];\n            this.role = 'NoAutorizado';\n            this.role = localStorage.getItem('role');\n            console.log('this.role', this.role);\n            this.appitems = [];\n            this.appitems = [\n                {\n                    label: 'Herramientas',\n                    items: [\n                        {\n                            label: 'Entregas',\n                            link: '/tablas/entregas',\n                        },\n                        {\n                            label: 'Escrituracion',\n                            link: '/tablas/escrituracion',\n                        },\n                        {\n                            label: 'Legalización',\n                            link: '/tablas/legalizacion',\n                        },\n                        {\n                            label: 'Renovación',\n                            link: '/tablas/renovaciones',\n                        }, {\n                            label: 'Seguimiento de subsidio',\n                            link: '/tablas/segumientos-subsidio',\n                        }, {\n                            label: 'Promesas',\n                            link: '/tablas/promesas',\n                        }, {\n                            label: 'Desembolso',\n                            link: '/tablas/desembolsos',\n                        }, {\n                            label: 'Ordenes',\n                            link: '/tablas/ordenes',\n                        }, {\n                            label: 'Subsidio',\n                            link: '/tablas/subsidios',\n                        }, {\n                            label: 'Recaudos',\n                            link: '/tablas/recaudos',\n                        }, {\n                            label: 'Trazabilidad',\n                            link: '/tablas/trazabilidad',\n                        }\n                    ]\n                },\n                {\n                    label: 'Reportes',\n                    items: [\n                        {\n                            label: 'Escrituración y Entregas',\n                            link: '/reporte/5',\n                        },\n                        {\n                            label: 'Ordenes',\n                            link: '/reporte/4',\n                        },\n                        {\n                            label: 'Promesas',\n                            link: '/reporte/7',\n                        },\n                        {\n                            label: 'Recaudo',\n                            link: '/reporte/6',\n                        },\n                        {\n                            label: 'Renovación y subsidio',\n                            link: '/reporte/1',\n                        },\n                        {\n                            label: 'Trazabilidad',\n                            link: '/reporte/2',\n                        },\n                    ]\n                }\n            ];\n            if (this.role == 'Administrador') {\n                this.appitems.push({\n                    label: 'Configuracion',\n                    items: [\n                        {\n                            label: 'Seleccion Proyectos',\n                            link: '/configuracion-proyectos',\n                        },\n                        {\n                            label: 'Roles de Usuario',\n                            link: '/configuracion-roles',\n                        },\n                        {\n                            label: 'Carga Datos',\n                            link: '/carga-informacion',\n                        },\n                        {\n                            label: 'Auditoria',\n                            link: '/auditoria',\n                        }\n                    ]\n                });\n            }\n            this.mobileQuery = media.matchMedia('(max-width: 1024px)');\n            this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n            this.mobileQuery.addListener(this.mobileQueryListener);\n            // this.isShowSidebar = !this.mobileQuery.matches;\n        }\n        ngafterviewinit() {\n            this.sidenav.close();\n        }\n        toggleAction() {\n            if (this.sidenav.opened) {\n                this.sidenav.close();\n            }\n            else {\n                this.sidenav.open();\n            }\n        }\n        logout() {\n            localStorage.removeItem('token');\n            this.router.navigate(['login']);\n        }\n        ngOnDestroy() {\n            this.mobileQuery.removeListener(this.mobileQueryListener);\n            this.sidenav.close();\n        }\n        selectedItem($evt) {\n        }\n    }\n    LayoutComponent.ɵfac = function LayoutComponent_Factory(t) { return new (t || LayoutComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ChangeDetectorRef */ \"h\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_1__[/* MediaMatcher */ \"c\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Pb\"](_angular_router__WEBPACK_IMPORTED_MODULE_2__[/* Router */ \"c\"])); };\n    LayoutComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineComponent */ \"Jb\"]({ type: LayoutComponent, selectors: [[\"app-layout\"]], viewQuery: function LayoutComponent_Query(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵviewQuery */ \"Oc\"](_c0, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵqueryRefresh */ \"vc\"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵloadQuery */ \"dc\"]()) && (ctx.sidenav = _t.first);\n            }\n        }, ngContentSelectors: _c1, decls: 24, vars: 4, consts: [[\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with menu icon\", 1, \"example-icon\", 3, \"click\"], [1, \"example-spacer\"], [1, \"btns-panel\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with heart icon\", 1, \"example-icon\", \"favorite-icon\", 3, \"click\"], [1, \"layout\"], [\"mode\", \"side\", 1, \"layout-sidebar\", 3, \"opened\", \"mode\", \"fixedInViewport\", \"openedChange\"], [\"sidenav\", \"\"], [1, \"avatar-panel\"], [\"src\", \"./assets/img/login.png\", \"tabindex\", \"0\", 1, \"avatar\"], [\"color\", \"white\"], [3, \"configuration\", \"items\", \"selectedItem\", 4, \"ngIf\"], [1, \"layout-content\"], [3, \"configuration\", \"items\", \"selectedItem\"]], template: function LayoutComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵprojectionDef */ \"lc\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](0, \"mat-toolbar\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](1, \"button\", 0);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"click\", function LayoutComponent_Template_button_click_1_listener() { return ctx.toggleAction(); });\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](2, \"mat-icon\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵtext */ \"Jc\"](3, \"menu\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](4, \"span\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵtext */ \"Jc\"](5, \"MacrosWeb\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelement */ \"Qb\"](6, \"span\", 1);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](7, \"div\", 2);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](8, \"button\", 3);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"click\", function LayoutComponent_Template_button_click_8_listener() { return ctx.logout(); });\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](9, \"mat-icon\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵtext */ \"Jc\"](10, \"logout\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵtext */ \"Jc\"](11, \" Salir \");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](12, \"mat-sidenav-container\", 4);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](13, \"mat-sidenav\", 5, 6);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"openedChange\", function LayoutComponent_Template_mat_sidenav_openedChange_13_listener($event) { return ctx.isShowSidebar = $event; });\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](15, \"div\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](16, \"div\", 7);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelement */ \"Qb\"](17, \"img\", 8);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](18, \"h4\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵtext */ \"Jc\"](19, \"Bienvenido!\");\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelement */ \"Qb\"](20, \"hr\", 9);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵtemplate */ \"Hc\"](21, LayoutComponent_ng_material_multilevel_menu_21_Template, 1, 2, \"ng-material-multilevel-menu\", 10);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementStart */ \"Vb\"](22, \"mat-sidenav-content\", 11);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵprojection */ \"kc\"](23);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵelementEnd */ \"Ub\"]();\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵadvance */ \"Db\"](13);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵproperty */ \"mc\"](\"opened\", ctx.isShowSidebar)(\"mode\", ctx.mobileQuery.matches ? \"over\" : \"side\")(\"fixedInViewport\", ctx.mobileQuery.matches);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵadvance */ \"Db\"](8);\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵproperty */ \"mc\"](\"ngIf\", ctx.role != \"NoAutorizado\");\n            }\n        }, directives: [_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_3__[/* MatToolbar */ \"a\"], _angular_material_button__WEBPACK_IMPORTED_MODULE_4__[/* MatButton */ \"a\"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__[/* MatIcon */ \"a\"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_6__[/* MatSidenavContainer */ \"b\"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_6__[/* MatSidenav */ \"a\"], _angular_common__WEBPACK_IMPORTED_MODULE_7__[/* NgIf */ \"o\"], _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_6__[/* MatSidenavContent */ \"c\"], ng_material_multilevel_menu__WEBPACK_IMPORTED_MODULE_8__[/* NgMaterialMultilevelMenuComponent */ \"b\"]], styles: [\".layout[_ngcontent-%COMP%]{width:100%}.layout-sidebar[_ngcontent-%COMP%]{height:calc(100vh - 64px);background:#048c44;color:#fff;width:20em}.layout-sidebar[_ngcontent-%COMP%]   .avatar-panel[_ngcontent-%COMP%]{text-align:center}.layout-sidebar[_ngcontent-%COMP%]   .avatar-panel[_ngcontent-%COMP%]   .avatar[_ngcontent-%COMP%]{margin-top:16px;width:100px;height:100px;border-radius:50%;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.layout-sidebar[_ngcontent-%COMP%]   mat-list[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]{color:#fff}@media (max-width:576px){.layout-sidebar[_ngcontent-%COMP%]{width:218px}}.layout-content[_ngcontent-%COMP%]{background-color:#f6f7ff;height:calc(100vh - 64px)}@media (max-width:576px){.layout-content[_ngcontent-%COMP%]{width:100%}}mat-toolbar[_ngcontent-%COMP%]{background:#048c44;color:#fff}mat-toolbar[_ngcontent-%COMP%]   .btns-panel[_ngcontent-%COMP%]{padding:0 2em}.example-spacer[_ngcontent-%COMP%]{flex:1 1 auto}.NavLink[_ngcontent-%COMP%]{text-decoration:none;color:#fff!important}@media (max-width:1024px){mat-sidenav[_ngcontent-%COMP%]{height:100%!important}}\"] });\n    return LayoutComponent;\n})();\n\n\n/***/ })\n\n}]);","inputSourceMap":null}