{"version":3,"sources":["webpack:///src/app/pages/user-roles/user-roles-routing.module.ts","webpack:///src/app/pages/user-roles/user-roles.module.ts","webpack:///src/app/pages/user-roles/user-roles.component.ts","webpack:///src/app/pages/user-roles/user-roles.component.html"],"names":["routes","path","component","UserRolesRoutingModule","forChild","UserRolesModule","UserRolesComponent","_legalizacionService","_confirmationService","usersList","total","rolesList","displayedColumns","dataSource","getUsers","getRoles","displayLoading","subscribe","response","data","length","paginator","sort","err","console","log","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","evt","userId","role","getRoleByName","undefined","confirm","message","accept","addOrUpdateRole","Id","reject","close","name","index","element","Name","applyFilter"],"mappings":"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","file":"pages-user-roles-user-roles-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserRolesComponent } from './user-roles.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserRolesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRolesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserRolesComponent } from './user-roles.component';\nimport { UserRolesRoutingModule } from './user-roles-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ConfirmationService } from 'primeng/api';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LegalizacionService } from 'src/app/services/legalizacion.service';\n\n@NgModule({\n  declarations: [\n    UserRolesComponent\n  ],\n  imports: [\n    CommonModule,\n    UserRolesRoutingModule,\n    SharedModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    ConfirmDialogModule,\n    HttpClientModule\n  ],providers:[\n    ConfirmationService,\n    LegalizacionService\n  ]\n})\nexport class UserRolesModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmationService } from 'primeng/api';\nimport { AppComponent } from 'src/app/app.component';\nimport { LegalizacionService } from 'src/app/services/legalizacion.service';\n\n@Component({\n  selector: 'app-user-roles',\n  templateUrl: './user-roles.component.html',\n  styleUrls: ['./user-roles.component.scss']\n})\nexport class UserRolesComponent implements OnInit {\n\n  usersList: any = [];\n  total: number = 0;\n\n  rolesList = [];\n\n  displayedColumns: string[] = ['usuario', 'rol'];\n  dataSource: MatTableDataSource<any> = new MatTableDataSource();;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private _legalizacionService: LegalizacionService,\n    private _confirmationService: ConfirmationService\n  ) { }\n\n  ngOnInit(): void {\n    this.getUsers();\n    this.getRoles();\n  }\n\n  getUsers() {\n    AppComponent.displayLoading = true;\n\n    this._legalizacionService.getUsers()\n      .subscribe(\n        (response: any) => {\n          this.usersList = response.data;\n          this.total = this.usersList.length;\n\n          this.dataSource = new MatTableDataSource(this.usersList);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          AppComponent.displayLoading = false;\n        }, err => {\n          console.log(err);\n          AppComponent.displayLoading = false;\n        }\n      )\n  }\n\n\n  getRoles() {\n    AppComponent.displayLoading = true;\n\n    this._legalizacionService.getRoles()\n      .subscribe(\n        (response: any) => {\n          this.rolesList = response.data;\n          AppComponent.displayLoading = false;\n        }, err => {\n          console.log(err);\n          AppComponent.displayLoading = false;\n        }\n      )\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  changeRole(evt, userId) {\n    let role = this.getRoleByName(evt.value);\n\n    if (role != null && role != undefined) {\n\n\n      this._confirmationService.confirm({\n        message: 'Estas seguro que deseas actualizar este campo?',\n        accept: () => {\n          AppComponent.displayLoading = true;\n\n          this._legalizacionService.addOrUpdateRole(userId, role.Id, 2)\n            .subscribe(\n              (response: any) => {\n                AppComponent.displayLoading = false;\n              }, err => {\n                console.log(err);\n                AppComponent.displayLoading = false;\n              }\n            )\n        },\n        reject: () => {\n          this._confirmationService.close();\n        }\n      });\n\n    }\n\n  }\n\n  getRoleByName(name) {\n    for (let index = 0; index < this.rolesList.length; index++) {\n      const element = this.rolesList[index];\n      if(element.Name == name){\n        return element;\n      }\n    }\n    return null;\n  }\n\n}\n","<app-layout>\n    <section class=\"content-panel\">\n        <mat-card>\n            <h1>Usuarios</h1>\n            <h5>Total: {{total}}</h5>\n            <div>\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Filtro</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Escribe una palabra\" #input>\n                </mat-form-field>\n\n                <div class=\"mat-elevation-z8\">\n                    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                        <!-- ID Column -->\n                        <ng-container matColumnDef=\"usuario\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Usuario </th>\n                            <td mat-cell *matCellDef=\"let row\"> {{row.UserName}} </td>\n                        </ng-container>\n\n                        <!-- Progress Column -->\n                        <ng-container matColumnDef=\"rol\">\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Rol </th>\n                            <td mat-cell *matCellDef=\"let row\">\n                                <mat-form-field appearance=\"fill\">\n                                    <mat-label>Selecciona una opcion</mat-label>\n                                    <mat-select name=\"rol\" [(ngModel)]=\"row.Role\"\n                                        (selectionChange)=\"changeRole($event, row.Id)\">\n                                        <mat-option [value]=\"rol.Name\" *ngFor=\"let rol of rolesList\">{{rol.Name}}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                    </table>\n\n                    <mat-paginator [pageSizeOptions]=\"[10,25, 100]\" aria-label=\"Select page of users\">\n                    </mat-paginator>\n                </div>\n            </div>\n        </mat-card>\n        <!-- <div class=\"save-content\">\n            <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n                <mat-icon>save</mat-icon>\n            </button>\n        </div> -->\n        <p-confirmDialog header=\"Confirmacion\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\n\n    </section>\n\n</app-layout>"]}